<!--
ARCHES - a program developed to inventory and manage immovable cultural heritage.
Copyright (C) 2013 J. Paul Getty Trust and World Monuments Fund

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<!--
ARCHES - a program developed to inventory and manage immovable cultural heritage.
Copyright (C) 2013 J. Paul Getty Trust and World Monuments Fund

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
-->

<!--
ARCHES - a program developed to inventory and manage immovable cultural heritage.
Copyright (C) 2013 J. Paul Getty Trust and World Monuments Fund

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
-->




<!DOCTYPE html>
<!--[if IE 8]> <html lang="en" class="ie8"> <![endif]-->
<!--[if IE 9]> <html lang="en" class="ie9"> <![endif]-->
<!--[if !IE]><!--> <html lang="en"> <!--<![endif]-->



<head>
    <title> Arches -  Image Service Manager </title>

    <!-- Meta -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <link rel="shortcut icon" href="/media/img/favicon.png" />

    
        <link rel="stylesheet" href="/media/CACHE/css/arches.47c803386f21.css" type="text/css" media="screen" />
        
        <link href="/media/css/package.css" rel="stylesheet">
        <link href="/media/css/project.css" rel="stylesheet">
    

</head>

<body class="scroll-y-auto">
    

    <div class="loading-mask" data-bind="visible: typeof(loading()) === 'boolean' && loading()"></div>

    <div class="loading-mask" style="display: none;" data-bind="visible: typeof(loading()==='string') && loading().length > 0">
        <div class="loading-mask-string" data-bind="text: loading"></div>
    </div>


    
    



    <div class="wrapper">

        <div id="container" class="effect aside-left aside-bright navbar-fixed mainnav-sm" data-bind="css: {'mainnav-in': tabsActive() && showTabs(), 'mainnav-sm': !navExpanded(), 'mainnav-lg': navExpanded()}">

            
            <header id="navbar">

                <div id="navbar-container" class="boxed" style="background-color: inherit; padding-right: 0px">
                    <div class="navbar-header">
                        <a href="#" class="navbar-brand" data-bind="click: function () { navExpanded(!navExpanded()) }">
                            <img src="/media/img/arches_logo_light.png" alt="Nifty Logo" class="brand-icon">
                            <div class="brand-title">
                                <span class="brand-text">Arches</span>
                            </div>
                        </a>
                    </div>
                </div>

            </header>
            

            <div class="boxed">
                <div id="content-container" style="padding-bottom: 0px; padding-top: 0px;">

                    <!-- ko if: alert() -->
                    <div data-bind="visible: alert().active" style="display: none;" class="relative">
                        <div id="card-alert-panel" data-bind="css: 'ep-form-alert ' + (alert() ? alert().type() : '')">
                            <h4 class="ep-form-alert-title" data-bind="text: alert().title"></h4>
                            <p class="ep-form-alert-text" data-bind="html: alert().text"></p>

                            <div class="ep-form-alert-default-dismiss">
                                <i class="fa fa-times-circle" data-bind="click: alert().close"></i>
                            </div>

                            <div class="ep-form-alert-buttons">
                                <!-- ko if: alert().cancel -->
                                <button id="" class="btn btn-sm btn-danger btn-labeled fa fa-times" data-bind="click: alert().cancel">Cancel</button>
                                <!-- /ko -->
                                <!-- ko if: alert().ok -->
                                <button id="" class="btn btn-sm btn-primary btn-labeled fa fa-check" data-bind="click: alert().ok">OK</button>
                                <!-- /ko -->
                            </div>
                        </div>
                    </div>
                    <!-- /ko -->

                    
                    <div class="ep-toolbar">

                        <!-- Tools Menu -->
                        


                        
                        <!-- Page Title and Icon -->
                        <div class="ep-tools-title">
                            <h1 class="page-header text-overflow ep-graph-title">
                                <i class="fa fa fa-image text-center icon-wrap bg-gray ep-graph-title-icon"></i>
                                <span>Image Service Manager</span>
                            </h1>
                        </div>
                        

                        <!-- Login -->
                        
                        <a href="/auth/?next=/plugins/image-service-manager&logout=true" class="ep-tools ep-tools-login">
                            <div class="" data-placement="bottom" data-toggle="tooltip" data-original-title="Logout">
                                
                                <h5 class="hidden-xs">Welcome, admin</h5>
                                
                            </div>
                        </a>
                        

                        
                        
                        <!-- Notifications -->
                        
                        <a href="" class="ep-tools ep-notifs-toggle ep-tools-right" data-bind="click: function() {getNotifications();}">
                            <div class="" data-placement="bottom" data-toggle="tooltip" aria-expanded="true" data-original-title="Notifications">
                                <div >
                                    <div data-bind="visible: unreadNotifs()" id="circle"></div>
                                    <div data-bind="visible: unreadNotifs()" id="circle-outline"></div>
                                    <i class="fa fa-bell"></i>
                                </div>
                            </div>
                        </a>
                        

                        <!-- Search Bar -->
                        
                        <a href="/search" class="ep-tools ep-tools-right" data-bind="click:function () { navigate('/search') }">
                            <div class="" data-placement="bottom" data-toggle="tooltip" data-original-title='Search'>
                              <i class="ion-search"></i>

                            </div>
                        </a>
                        

                        <!-- Prov edit history-->
                        

                        

                        

                        
                    </div>

                    <!-- Notifications Panel -->
                    <div id="ep-notifs-panel" class="ep-notifs" style="display:none;">
                            <div class="ep-edits-header">
                                <div class="ep-help-title">
                                    <span>Notifications</span>
                                </div>
                                <a href="javascript:void(0);" data-bind="click: function() {getNotifications();}" class="ep-notifs-toggle ep-notifs-close ep-tools ep-tools-right">
                                    <div class="" data-placement="bottom" data-toggle="tooltip" data-original-title='Close'>
                                      <i class="fa fa-times-circle fa-lg"></i>
                                    </div>
                                </a>
                            </div>

                            <div class="ep-edits-body provisional-edit-history" style="float:left" data-bind="css: {'loading-mask': helploading()}">
                                <div class="ep-edits-content">
                                    



<!-- Title -->
<span>
    <!--ko with: notifsList -->
    <div>
        <button class="btn btn-lg btn-notifs-dismiss-all"
            data-bind="click: dismissAll, css: {hidden: $data.items().length === 0}" >Dismiss All
        </button>
    </div>
    <!-- /ko -->
    
    
    
</span>



<div class="list-wrapper">
    <div class="grid-list provisional-edit-history">
        <!--ko with: notifsList -->
        <!-- ko if: items().length === 0 -->
        <div class="new-provisional-edit-history">
            You're up-to-date and do not have any notifications. When you trigger a notification (for example, when you request a large download) it will display here.
        </div>
        <!-- /ko -->
        <!-- ko if: items().length > 0 -->
        <!-- ko foreach: items -->
        <div data-bind="component: {
            name: 'notification',
            params: { ...$data },
        }"></div>
        <!-- /ko -->
        <!-- /ko -->
        <!-- /ko -->
    </div>
</div>


                                </div>
                            </div>
                        </div>

                    <!-- Edits Panel -->
                    <div id="ep-edits-panel" class="ep-edits" style="display:none;">
                        <div class="ep-edits-header">
                            <div class="ep-edits-title">
                                <span>My Edit History</span>
                            </div>
                            <a href="javascript:void(0);" class="ep-edits-toggle ep-edits-close ep-tools ep-tools-right" style="border:none;">
                                <div class="" data-placement="bottom" data-toggle="tooltip" data-original-title='Close'>
                                  <i class="fa fa-times-circle fa-lg"></i>
                                </div>
                            </a>
                        </div>

                        <div class="ep-edits-body provisional-edit-history" style="float:left" data-bind="css: {'loading-mask': helploading()}">
                            <div class="ep-edits-content">
                                



<!-- Title -->
<span>

    <!--ko with: provisionalHistoryList -->

    <!-- Date Selector -->
    <div class="provisional-edit-history-filter">
        <div class="calendar">
            <select id="" class="resources" placeholder="Select" tabindex="-1" data-bind="value: dateRangeType, chosen:{ width: '100%'}">
                <!-- <option value="custom">Custom date range</option> -->
                <option value="today">Today</option>
                <option value="last-7">Last 7 days</option>
                <option value="last-30">Last 30 days</option>
                <option value="this-week">This week</option>
                <option value="this-month">This month</option>
                <option value="this-quarter">This quarter</option>
                <option value="this-year">This year</option>
            </select>
        </div>

        <div data-bind="component: { name: 'views/components/simple-switch', params: {value: sortDescending, config:{ label: 'Youngest to oldest', subtitle: ''}}}"></div>
    </div>
    <!-- /ko -->
    

    
    
</span>


<div class="list-wrapper">
    <div class="grid-list provisional-edit-history">
        <!--ko with: provisionalHistoryList -->
        <!-- ko if: items().length === 0 -->
        <div class="new-provisional-edit-history">
            You have not yet edited any data within the specified time period. Once you edit a resource, your edit history will display here.
        </div>
        <!-- /ko -->
        <!-- ko if: items().length > 0 -->
        <!-- ko foreach: items -->
        <div class="new-provisional-edit-history" data-bind="visible: $data.filtered() == false, click: $parent.selectItem.bind($parent), css:{ 'selected selected-card': $data.selected }">
            
            <div class='entry'>
                <!--ko if: $data.resource_deleted == false -->
                <a class="resource-edit-link" href='' data-bind="text: 'Edit', click: function(){$parent.editResource($data.resourceinstanceid)}"></a>
                <div class="entry-label-resource" data-bind="text: $data.resourcedisplayname"></div>
                <!--/ko-->
                <!--ko if: $data.resource_deleted == true -->
                <div><span class="resource-edit-link" data-bind="text: 'Resource has been deleted'"></span></div>
                <!--/ko-->
            </div>

            <div class='entry'><i data-bind="css: $data.resourcemodel.iconclass" style="padding-right: 4px"></i>
                <div class='entry-label' data-bind="text: $data.resourcemodel.name"></div>
            </div>

            <div class='entry'>
                <div class='entry-label'>Card: </div>
                <span data-bind="text: $data.card.name"></span>
            </div>

            <div class='entry'>
                <div class='entry-label'>Edited: </div>
                <span data-bind="text: $data.displaytime"></span>
            </div>

            <div class='entry'>
                <!--ko if: $data.pending -->
                <span class="provisional-review-pending">pending review</span>
                <!--/ko-->
                <!--ko if: $data.lastedittype === 'delete edit' -->
                <div><span class="provisional-review-declined" data-bind="text: $data.reviewer + ' declined'"></span></div>
                <!--/ko-->
                <!--ko if: $data.lastedittype === 'accept edit' -->
                <div><span class="provisional-review-accepted" data-bind="text: $data.reviewer + ' accepted'"></span></div>
                <!--/ko-->
            </div>

            
        </div>
        <!-- /ko -->
        <!-- /ko -->
        <!-- /ko -->

    </div>
</div>


                            </div>
                        </div>
                    </div>

                    <!-- Help Panel -->
                    <div id="ep-help-panel" class="ep-help" style="display: none" data-bind="slide: helpOpen, duration: 400, direction: {direction: 'right'}, easing: 'slide'">
                        <div class="ep-edits-header">
                            <div class="ep-help-title">
                                <span></span>
                            </div>
                            <a href="javascript:void(0);" class="ep-help-toggle ep-help-close ep-tools ep-tools-right" style="border:none" data-bind="click: function(){helpOpen(false)}">
                                <div class="" data-placement="bottom" data-toggle="tooltip" data-original-title='Close Help'>
                                  <i class="fa fa-times-circle fa-lg"></i>
                                </div>
                            </a>
                        </div>

                        <!-- help content loaded from contextually referenced template -->
                        <div class="ep-help-body" data-bind="css: {'loading-mask': helploading()}">
                            <!-- content gets inserted into this div -->
                            <div class="ep-help-content"></div>
                            <hr>
                            <h5>for more documentation, visit <a href="https://arches.readthedocs.io/" target="_blank">arches.readthedocs.io <i class="fa fa-external-link-square" aria-hidden="true"></i></a></h5>
                        </div>
                    </div>
                    

                    
<div class="content-panel">
    <div class="flex plugin-main" data-bind="component: {
        name: plugin.componentname,
        params: plugin.config
    }"></div>
</div>

                </div>

                
                <nav id="mainnav-container">
                    <div id="mainnav">
                        
                        <div id="mainnav-menu-wrap">
                            <div class="nano">
                                <div class="nano-content" tabindex="0">
                                    <ul id="mainnav-menu" class="list-group">

                                        <!-- Tools -->
                                        <li class="list-header">Tools</li>

                                        <!-- System Settings list item -->
                                        
                                        <li data-bind="click: navigate.bind(this, '/settings/')">
                                            <a href="/settings/">
                                                <i class="ti-alarm-clock"></i>
                                                <span class="menu-title">
                                                    <strong>Manage System Settings</strong>
                                                </span>
                                            </a>
                                            <ul class="collapse in pop-in arches" data-bind="css:{'expanded-nav': navExpanded()}">
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu" href="/settings/" data-bind="click: navigate.bind(this, '/settings/')">System Settings</a>
                                                </li>
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu" href="/graph/ff623370-fa12-11e6-b98b-6c4008b05c4c" data-bind="click: navigate.bind(this, '/graph_designer/ff623370-fa12-11e6-b98b-6c4008b05c4c'), clickBubble: false">System Settings Graph</a>
                                                </li>
                                            </ul>
                                        </li>
                                        

                                        <li>
                                            <a href="/search" data-bind="click:function () { navigate('/search') }">
                                                <i class="fa fa-search"></i>
                                                <span class="menu-title">
                                                    <strong>Search</strong>
                                                </span>
                                            </a>
                                        </li>

                                        <!--Menu list item-->
                                        
                                        <li data-bind="click: navigate.bind(self, '/resource')">
                                            <a href="/resource">
                                                <i class="fa fa-building-o"></i>
                                                <span class="menu-title">
                                                    <strong>Add New Resource</strong>
                                                </span>
                                            </a>
                                            <ul class="collapse in pop-in arches" data-bind="css:{'expanded-nav': navExpanded()}">
                                                <!-- ko foreach: createableResources -->
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu" href="#" data-bind="click: disable_instance_creation ? null: $parent.navigate.bind(this, '/add-resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'.replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)),
                                                        css: { 'arches-menu-item-disabled': disable_instance_creation },
                                                        attr: {
                                                            href: disable_instance_creation ? '#' : ('/add-resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'.replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid))
                                                        }">
                                                        <i class="fa arches-menu-icon" data-bind="css: iconclass || 'fa fa-question'"></i> <span data-bind="text:name"></span></a>
                                                </li>
                                                <!-- /ko -->
                                            </ul>
                                        </li>
                                        

                                        <!--Menu list item-->
                                        
                                        <li data-bind="click: navigate.bind(this, '/graph/')">
                                            <a href="#">
                                                <i class="fa fa-bookmark"></i>
                                                <span class="menu-title">
                                                    <strong>Arches Designer</strong>
                                                </span>
                                            </a>
                                            <ul class="collapse in pop-in arches" data-bind="css:{'expanded-nav': navExpanded()}">
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu"  href="/graph/" data-bind="click: navigate.bind(this, '/graph/')">Resource Models</a>
                                                </li>
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu" href="/graph/#branches" data-bind="click: navigate.bind(this, '/graph/#branches')">Branches</a>
                                                </li>
                                            </ul>
                                        </li>
                                        

                                        <!--Menu list item-->
                                        
                                        <li data-bind="click: navigate.bind(this, '/map_layer_manager')">
                                            <a href="/map_layer_manager">
                                                <i class="fa fa-server"></i>
                                                <span class="menu-title">
                                                    <strong>Map Layer Manager</strong>
                                                </span>
                                            </a>
                                            <ul class="collapse in pop-in arches" data-bind="css:{'expanded-nav': navExpanded()}">
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu" href="/map_layer_manager" data-bind="click: navigate.bind(this, '/map_layer_manager')">Resource Layers</a>
                                                </li>
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu" href="/map_layer_manager#basemaps" data-bind="click: navigate.bind(this, '/map_layer_manager#basemaps')">Basemaps</a>
                                                </li>
                                                <li class="link-submenu-item">
                                                    <a class="link-submenu" href="/map_layer_manager#overlays" data-bind="click: navigate.bind(this, '/map_layer_manager#overlays')">Overlays</a>
                                                </li>
                                            </ul>
                                        </li>

                                        <li>
                                            <a href="/collector_manager" data-bind="click: navigate.bind(this, '/collector_manager') ">
                                                <i class="fa fa-globe"></i>
                                                <span class="menu-title">
                                                    <strong>Arches Collector Manager</strong>
                                                </span>
                                            </a>
                                        </li>
                                        


                                        <!-- Recently Added -->
                                        
                                        <li>
                                            <a href="/resource/history" data-bind="click: navigate.bind(this, '/resource/history') ">
                                                <i class="ti-ticket"></i>
                                                <span class="menu-title">
                                                    <strong>Recent Edits</strong>
                                                </span>
                                            </a>
                                        </li>
                                        

                                        <!-- Profile Manager -->
                                        
                                        <li>
                                            <a href="/user" data-bind="click: navigate.bind(this, '/user') ">
                                                <i class="fa fa-user"></i>
                                                <span class="menu-title">
                                                    <strong>Profile Manager</strong>
                                                </span>
                                            </a>
                                        </li>
                                        

                                        <li class="list-divider-dark"></li>

                                        <!-- Tools -->
                                        <li class="list-header">Modules</li>

                                        
                                        <!--Menu list item-->
                                        <li>
                                            <a href="/rdm/" data-bind="click: navigate.bind(this, '/rdm/') ">
                                                <i class="fa fa-align-left"></i>
                                                <span class="menu-title">
                                                    Reference Data Manager
                                                </span>
                                            </a>
                                        </li>
                                        

                                        
                                            
                                                
                                            
                                        
                                            
                                                
                                            
                                        
                                            
                                                
                                                    <li>
                                                        
                                                        <a href="/plugins/init-workflow" data-bind="click: navigate.bind(this, '/plugins/init-workflow') ">
                                                        
                                                            <i class="fa fa-play-circle"></i>
                                                            <span class="menu-title">
                                                                Workflows
                                                            </span>
                                                        </a>
                                                    </li>
                                                
                                            
                                        
                                            
                                                
                                            
                                        
                                            
                                                
                                                    <li class="active-sub">
                                                        
                                                        <a href="/plugins/image-service-manager" data-bind="click: navigate.bind(this, '/plugins/image-service-manager') ">
                                                        
                                                            <i class="fa fa-image"></i>
                                                            <span class="menu-title">
                                                                Image Service Manager
                                                            </span>
                                                        </a>
                                                    </li>
                                                
                                            
                                        
                                            
                                                
                                            
                                        
                                            
                                                
                                            
                                        
                                            
                                                
                                            
                                        
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </nav>
                

                
                <aside id="aside-container" style="position: fixed;">
                    <div id="aside">
                        
                    </div>
                </aside>
                
            </div>

            <button id="scroll-top" class="btn"><i class="fa fa-chevron-up"></i></button>
        </div>

    </div>


</body>


    <script src="/media/packages/requirejs/require.js"></script>

    

    <script>
        
        define('view-data', [], function () {
            return {
                graphs: [],
                createableResources: [{"color": "rgba(5,114,102,0.8)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity", "nodegroup_ids": ["52aa1673-c450-11e9-8640-a4d18cec433a", "56c7a5dc-c450-11e9-ad38-a4d18cec433a", "442a9c87-c450-11e9-b396-a4d18cec433a", "5620cb99-c450-11e9-ac35-a4d18cec433a"]}, {"icon": "fa fa-chain", "name": "Curation", "nodegroup_ids": ["597645ca-c450-11e9-8132-a4d18cec433a", "466f81d4-c451-11e9-b7c9-a4d18cec433a", "9e4f6be8-99f6-11ea-a9b7-3af9d3b32b71"]}]}, "description": "Collections or sets of objects. These might be curated as a museum or scientific study set, or simply sets put together for a particular purpose and then disbanded.", "disable_instance_creation": false, "graphid": "1b210ef3-b25c-11e9-a037-a4d18cec433a", "iconclass": "fa fa-cubes", "jsonldcontext": "", "name": "Collection or Set", "slug": "collection_or_set", "subtitle": "Set of Objects, typically for study or curation", "template_id": "b5380d34-15ef-4a38-95c0-df228068916d"}, {"color": "rgba(231,111,81,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity and Description", "nodegroup_ids": ["12707705-c05e-11e9-8177-a4d18cec433a", "97f2c366-b323-11e9-98a8-a4d18cec433a", "32db94f8-c05e-11e9-a2c1-a4d18cec433a", "cadbc433-b323-11e9-a4ba-a4d18cec433a", "20003a33-c05e-11e9-8646-a4d18cec433a", "280201ae-c05e-11e9-b285-a4d18cec433a", "bc2bfc4a-c061-11e9-bfe8-a4d18cec433a"]}, {"icon": "fa fa-calendar", "name": "Events", "nodegroup_ids": ["bda20e7a-b323-11e9-b758-a4d18cec433a", "d3a51166-c061-11e9-9820-a4d18cec433a", "3b5f674f-c05e-11e9-88f2-a4d18cec433a", "ae7d576b-d284-11e9-a0e5-a4d18cec433a"]}]}, "description": "One or more people, potentially sub-divided into further groups, that can act collectively. For example a research team, a department or an organization.", "disable_instance_creation": false, "graphid": "07883c9e-b25c-11e9-975a-a4d18cec433a", "iconclass": "fa fa-users", "jsonldcontext": "https://linked.art/ns/v1/linked-art.json", "name": "Group", "slug": "group", "subtitle": "One or more people or sub-groups that act collectively", "template_id": "3a9fd7d1-f065-4777-b664-3fda0eb39ffe"}, {"color": "rgba(59,94,107,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity", "nodegroup_ids": ["b6c89992-99f6-11ea-a9b7-3af9d3b32b71", "b6ca8bda-99f6-11ea-a9b7-3af9d3b32b71", "b6c9f4cc-99f6-11ea-a9b7-3af9d3b32b71", "b6c8662a-99f6-11ea-a9b7-3af9d3b32b71", "b6ca332e-99f6-11ea-a9b7-3af9d3b32b71"]}, {"icon": "fa fa-chain", "name": "Links", "nodegroup_ids": ["b6c8c160-99f6-11ea-a9b7-3af9d3b32b71", "b6c9ba34-99f6-11ea-a9b7-3af9d3b32b71", "b6c9a990-99f6-11ea-a9b7-3af9d3b32b71", "b6c9dba4-99f6-11ea-a9b7-3af9d3b32b71"]}, {"icon": "fa fa-gears", "name": "Production", "nodegroup_ids": ["b6c88e52-99f6-11ea-a9b7-3af9d3b32b71"]}]}, "description": "A physical object, including works of art, the tools used to create them, and instruments used to measure or conserve them.", "disable_instance_creation": false, "graphid": "b6c819b8-99f6-11ea-a9b7-3af9d3b32b71", "iconclass": "fa fa-binoculars", "jsonldcontext": "https://linked.art/ns/v1/linked-art.json", "name": "Instrument", "slug": null, "subtitle": "An instrument used in an experiment", "template_id": "c2edf720-9db0-4029-a102-48e6762ded79"}, {"color": "rgba(17,54,122,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-adjust", "name": "Identity", "nodegroup_ids": ["a74aef21-c456-11e9-a21f-a4d18cec433a", "ad9f4eb5-c456-11e9-bf1d-a4d18cec433a", "7a22d1e8-c456-11e9-a20c-a4d18cec433a", "acac7080-c456-11e9-b882-a4d18cec433a", "fbc2816e-c456-11e9-b229-a4d18cec433a", "28366287-c457-11e9-a357-a4d18cec433a", "dc7c95de-c45a-11e9-a8b6-a4d18cec433a"]}, {"icon": "fa fa-adjust", "name": "Links", "nodegroup_ids": ["cb3f3ae1-c45a-11e9-8594-a4d18cec433a", "1241b478-c457-11e9-922c-a4d18cec433a", "85869d3d-c456-11e9-a9b6-a4d18cec433a", "99a4c328-c456-11e9-a1c6-a4d18cec433a", "ed87c6c2-c456-11e9-b645-a4d18cec433a", "a95cc826-c456-11e9-a4a8-a4d18cec433a"]}]}, "description": "A modification to a physical object that changes it, but does not completely destroy it.  This would include experiments and conservation activities that somehow physically alter the object.", "disable_instance_creation": false, "graphid": "5bece219-c456-11e9-8dcd-a4d18cec433a", "iconclass": "fa fa-cut", "jsonldcontext": null, "name": "Modification", "slug": "modification", "subtitle": "A modification to a physical object that changes but does not destroy it", "template_id": "f02f4b69-08d9-49fa-a4d1-94ef8178fbce"}, {"color": "rgba(131,160,214,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity", "nodegroup_ids": ["87e3d6a1-c457-11e9-9ec9-a4d18cec433a", "8ec30d3a-c457-11e9-81dc-a4d18cec433a", "7b97ee23-c457-11e9-8ce3-a4d18cec433a", "8fce3ed4-c457-11e9-b300-a4d18cec433a", "c07d2e07-c457-11e9-bbe0-a4d18cec433a", "51416e9c-c458-11e9-b70e-a4d18cec433a"]}, {"icon": "fa fa-adjust", "name": "Links", "nodegroup_ids": ["cd412ac5-c457-11e9-9644-a4d18cec433a", "dd596aae-c457-11e9-956b-a4d18cec433a", "b3b56607-c457-11e9-adc2-a4d18cec433a", "a77be70c-c457-11e9-a965-a4d18cec433a", "1acc9d59-c458-11e9-99e4-a4d18cec433a", "212161cc-d383-11e9-b096-a4d18cec433a", "89f06cba-c457-11e9-916e-a4d18cec433a"]}]}, "description": "An observation, comparison, measurement or similar activity that does not alter the subject (like a Modification) but does categorize or otherwise assign some description to it.", "disable_instance_creation": false, "graphid": "615b11ee-c457-11e9-910c-a4d18cec433a", "iconclass": "fa fa-eye", "jsonldcontext": "", "name": "Observation", "slug": "observation", "subtitle": "Observation, comparison, measurement or other describing activity", "template_id": "e581f911-185b-4456-873d-f83b46fd89ec"}, {"color": null, "config": {}, "description": "Period of time, during which activities can occur. Not currently used.", "disable_instance_creation": "This Model is Inactive and not available for editing", "graphid": "52c40a30-b25c-11e9-92cf-a4d18cec433a", "iconclass": "fa fa-calendar-o", "jsonldcontext": "", "name": "Period", "slug": "period", "subtitle": "A named period of time", "template_id": "50000000-0000-0000-0000-000000000001"}, {"color": "rgba(244,162,97,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa-info", "name": "Identity", "nodegroup_ids": ["1ed5519e-bfb2-11e9-b995-a4d18cec433a", "2d4b4c23-bfb2-11e9-ba92-a4d18cec433a", "2a9fea8c-bfb2-11e9-b057-a4d18cec433a", "eaeb2d35-bfb3-11e9-8964-a4d18cec433a", "b3026e1c-b31f-11e9-aa4a-a4d18cec433a", "f1604d68-bfb4-11e9-a503-a4d18cec433a", "83cf1bdc-bfb4-11e9-8f51-a4d18cec433a", "741d3687-bfb4-11e9-bcc1-a4d18cec433a", "9f14d3b3-bfb4-11e9-a539-a4d18cec433a"]}, {"icon": "fa-calendar", "name": "Events", "nodegroup_ids": ["2d53536b-d286-11e9-a29b-a4d18cec433a", "c93b21c2-d286-11e9-8788-a4d18cec433a", "e86387b8-d288-11e9-bfd3-a4d18cec433a", "110fac30-d289-11e9-a8dd-a4d18cec433a", "08dca39e-d287-11e9-aa00-a4d18cec433a"]}]}, "description": "An individual human person, alive or dead. This is used for artists or other creators, current staff and researchers, and anyone else.", "disable_instance_creation": false, "graphid": "f71f7b9c-b25b-11e9-901e-a4d18cec433a", "iconclass": "fa fa-user", "jsonldcontext": "https://linked.art/ns/v1/linked-art.json", "name": "Person", "slug": "person", "subtitle": "An individual, named human person", "template_id": "50000000-0000-0000-0000-000000000004"}, {"color": "rgba(42,157,143,0.5)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity", "nodegroup_ids": ["b9c1ced7-b497-11e9-a4da-a4d18cec433a", "8ddfe3ab-b31d-11e9-aff0-a4d18cec433a", "1952bb0a-b498-11e9-a679-a4d18cec433a", "22c150ca-b498-11e9-9adc-a4d18cec433a", "0b7f8d0a-b498-11e9-a189-a4d18cec433a", "cbf9ba14-b31d-11e9-8529-a4d18cec433a"]}, {"icon": "fa fa-chain", "name": "Links", "nodegroup_ids": ["f8d5fe4c-b31d-11e9-9625-a4d18cec433a", "63e49254-c444-11e9-afbe-a4d18cec433a", "2fe9f066-b31e-11e9-b3be-a4d18cec433a", "23bf9ca1-b31e-11e9-8dd7-a4d18cec433a", "b008dacc-b31d-11e9-84af-a4d18cec433a", "a030e34f-b31d-11e9-8c0b-a4d18cec433a", "4869c09e-b31e-11e9-ba58-a4d18cec433a", "fec59582-8593-11ea-97eb-acde48001122"]}, {"icon": "fa fa-calendar", "name": "Events", "nodegroup_ids": ["cc15650c-b497-11e9-a64d-a4d18cec433a", "fc651451-b497-11e9-9d7b-a4d18cec433a", "b11f217a-d2bc-11e9-8dfa-a4d18cec433a", "57f25133-d2bd-11e9-9131-a4d18cec433a", "a1490580-d2bd-11e9-af41-a4d18cec433a"]}]}, "description": "A physical object, including works of art, the tools used to create them, and instruments used to measure or conserve them.", "disable_instance_creation": false, "graphid": "9519cb4f-b25b-11e9-8c7b-a4d18cec433a", "iconclass": "fa fa-asterisk", "jsonldcontext": "https://linked.art/ns/v1/linked-art.json", "name": "Physical Thing", "slug": null, "subtitle": "A physical object that can be touched", "template_id": "b3056c21-33c4-4055-b064-ea9296c1c13a"}, {"color": "rgba(38,70,83,0.75)", "config": {"activeTabIndex": 1, "tabs": [{"icon": "fa-info", "name": "Identity", "nodegroup_ids": ["1be4c387-c071-11e9-ba22-a4d18cec433a", "002289b3-c071-11e9-a58c-a4d18cec433a", "23e25605-c071-11e9-9d09-a4d18cec433a", "229e120f-c071-11e9-bc35-a4d18cec433a", "75da0923-d325-11e9-8b03-a4d18cec433a"]}, {"icon": "fa-chain", "name": "Links", "nodegroup_ids": ["43ea673d-c071-11e9-a4af-a4d18cec433a", "5420c48f-c071-11e9-b3fe-a4d18cec433a", "6c874bcf-c071-11e9-9605-a4d18cec433a"]}]}, "description": "An area on the earth's surface, independent of time or any building or other material that might be located there", "disable_instance_creation": false, "graphid": "cc8ed633-b25b-11e9-a13a-a4d18cec433a", "iconclass": "fa fa-map-marker", "jsonldcontext": null, "name": "Place", "slug": "place", "subtitle": "A geographic space on a map", "template_id": "50000000-0000-0000-0000-000000000004"}, {"color": "rgba(57,96,168,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity and Description", "nodegroup_ids": ["0b926359-ca85-11e9-ac9c-a4d18cec433a", "0b924423-ca85-11e9-865a-a4d18cec433a", "0b92a414-ca85-11e9-b725-a4d18cec433a", "0b929f00-ca85-11e9-bfe2-a4d18cec433a", "0b924961-ca85-11e9-85e3-a4d18cec433a", "0b92b30a-ca85-11e9-a41d-a4d18cec433a", "0b9253d9-ca85-11e9-95b8-a4d18cec433a"]}, {"icon": "fa fa-chain", "name": "Details", "nodegroup_ids": ["dbaa2022-9ae7-11ea-ab62-dca90488358a", "0b925e3a-ca85-11e9-a308-a4d18cec433a", "0b9272a8-ca85-11e9-9149-a4d18cec433a", "0b92b8c0-ca85-11e9-adef-a4d18cec433a"]}]}, "description": "Projects, Research Tasks, Experiments and similar activities.", "disable_instance_creation": false, "graphid": "0b9235d9-ca85-11e9-9fa2-a4d18cec433a", "iconclass": "fa fa-youtube-play", "jsonldcontext": "https://linked.art/ns/v1/linked-art.json", "name": "Project", "slug": "activity", "subtitle": "Projects, Research Tasks and Experiments", "template_id": "2b124304-6e42-4c0c-8161-14c010dcef71"}, {"color": null, "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity", "nodegroup_ids": ["5e8319ce-066c-11ea-b592-acde48001122", "6d81fe1a-066f-11ea-b592-acde48001122", "5f28ec0a-066c-11ea-b592-acde48001122", "5d93d95e-066c-11ea-b592-acde48001122", "8c054c20-066f-11ea-b592-acde48001122", "9c97b618-066f-11ea-b592-acde48001122", "5c400dfc-066c-11ea-b592-acde48001122"]}, {"icon": "fa fa-calendar", "name": "Parts", "nodegroup_ids": ["a59ead4c-0670-11ea-b592-acde48001122", "0c907e5c-066e-11ea-b592-acde48001122", "870422a6-066e-11ea-b592-acde48001122", "6030c244-066c-11ea-b592-acde48001122", "d8e79a74-0670-11ea-b592-acde48001122", "43de3e68-0735-11ea-aac2-acde48001122", "c1f9ca7c-066f-11ea-b592-acde48001122"]}]}, "description": "A Provenance activity such as a gift, acquisition, inheritance, or transfer of custody of an object.", "disable_instance_creation": "This Model is Inactive and not available for editing", "graphid": "31e6b222-066c-11ea-b592-acde48001122", "iconclass": "fa fa-dollar", "jsonldcontext": "https://linked.art/ns/v1/linked-art.json", "name": "Provenance Activity", "slug": null, "subtitle": "Activity relating to provenance of one or more objects", "template_id": "50000000-0000-0000-0000-000000000004"}, {"color": "rgba(57,96,168,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa fa-info", "name": "Identity and Description", "nodegroup_ids": ["0b926359-ca85-11e9-ac9c-a4d18cec433a", "0b924423-ca85-11e9-865a-a4d18cec433a", "0b92a414-ca85-11e9-b725-a4d18cec433a", "0b929f00-ca85-11e9-bfe2-a4d18cec433a", "0b924961-ca85-11e9-85e3-a4d18cec433a", "0b92b30a-ca85-11e9-a41d-a4d18cec433a", "0b9253d9-ca85-11e9-95b8-a4d18cec433a"]}, {"icon": "fa fa-chain", "name": "Details", "nodegroup_ids": ["dbaa2022-9ae7-11ea-ab62-dca90488358a", "0b925e3a-ca85-11e9-a308-a4d18cec433a", "0b9272a8-ca85-11e9-9149-a4d18cec433a", "0b92b8c0-ca85-11e9-adef-a4d18cec433a"]}]}, "description": "Projects, Research Tasks, Experiments and similar activities.", "disable_instance_creation": false, "graphid": "03357848-1d9d-11eb-a29f-024e0d439fdb", "iconclass": "fa fa-youtube-play", "jsonldcontext": "https://linked.art/ns/v1/linked-art.json", "name": "Sampling Activity", "slug": null, "subtitle": "Projects, Research Tasks and Experiments", "template_id": "2b124304-6e42-4c0c-8161-14c010dcef71"}, {"color": "rgba(165,50,20,0.75)", "config": {"activeTabIndex": 0, "tabs": [{"icon": "fa-info", "name": "Identity", "nodegroup_ids": ["0807541e-c073-11e9-b0d6-a4d18cec433a", "0096edca-c073-11e9-b620-a4d18cec433a", "dc946b1e-c070-11e9-a005-a4d18cec433a", "ffe82375-c072-11e9-a893-a4d18cec433a", "cf38e5e6-c070-11e9-bb9e-a4d18cec433a", "2db7af66-c077-11e9-ae4d-a4d18cec433a", "ec9e5938-c07b-11e9-994b-a4d18cec433a"]}, {"icon": "fa-chain", "name": "Links", "nodegroup_ids": ["8c673219-c073-11e9-ab06-a4d18cec433a", "fe0b1602-c073-11e9-adb3-a4d18cec433a", "c28ea72e-c073-11e9-bc63-a4d18cec433a", "218d2142-c074-11e9-9137-a4d18cec433a"]}, {"icon": "fa-calendar", "name": "Events", "nodegroup_ids": ["11747d2e-c073-11e9-bca3-a4d18cec433a", "bed0717a-d341-11e9-9ab4-a4d18cec433a"]}]}, "description": "A text based work that can be carried by physical or digital objects. Examples are the text for conservation reports, for journal articles, or exhibition catalogs.", "disable_instance_creation": false, "graphid": "a7b1a7c5-b25b-11e9-8a4e-a4d18cec433a", "iconclass": "fa fa-book", "jsonldcontext": null, "name": "Textual Work", "slug": "textual_work", "subtitle": "A conceptual, text-based work", "template_id": "50000000-0000-0000-0000-000000000004"}],
                help: "",
                userCanEditResources: JSON.parse('True'.toLowerCase()),
                userCanReadResources: JSON.parse('True'.toLowerCase())
            };
        });
        
    </script>

    <script>
        define('plugin-data', ['views/components/plugins/manifest-manager'], function() {
            return {"component": "views/components/plugins/manifest-manager", "componentname": "manifest-manager", "config": {"show": true}, "icon": "fa fa-image", "name": "Image Service Manager", "pluginid": "6f707d86-d49c-4ece-9883-8cbb2ecda1b5", "slug": "image-service-manager", "sortorder": 1};
        });
    </script>


    




<script>
    var CKEDITOR_BASEPATH = '/media/packages/ckeditor/';
    require.config({
        baseUrl: '/media/js',
        urlArgs: '_dc=6.0.1',
        paths: {
            'plugins': '/media/plugins',
            'widget-templates': '/widgets/'.replace(/\/$/, ""),
            'report-templates': '/report-templates/'.replace(/\/$/, ""),
            'function-templates': '/function-templates/'.replace(/\/$/, ""),
            'templates': '/templates/'.replace(/\/$/, ""),
            'datatype-config-templates': '/components/datatypes/'.replace(/\/$/, ""),
            'nifty': '/media/plugins/nifty',
            'async': '/media/packages/requirejs-plugins/src/async',
            'text': '/media/packages/requirejs-text/text',
            'jquery-lib': '/media/packages/jquery/dist/jquery.min',
            'jquery': '/media/packages/jquery-migrate/dist/jquery-migrate.min',
            'js-cookie': '/media/packages/js-cookie/src/js.cookie',
            'select2': '/media/packages/select2/select2',
            'bootstrap': '/media/packages/bootstrap/dist/js/bootstrap.min',
            'jquery-ui': '/media/packages/jqueryui/jquery-ui.min',
            'backbone': '/media/packages/backbone/backbone-min',
            'underscore': '/media/packages/underscore/underscore-min',
            'jquery-validate': '/media/packages/jquery-validation/dist/jquery.validate.min',
            'd3': '/media/packages/d3/dist/d3.min',
            'dropzone': '/media/packages/dropzone/dist/min/dropzone-amd-module.min',
            'ckeditor': '/media/packages/ckeditor/ckeditor',
            'ckeditor-jquery': '/media/packages/ckeditor/adapters/jquery',
            'knockout': '/media/packages/knockout/build/output/knockout-latest',
            'knockout-mapping': '/media/packages/knockout-mapping/dist/knockout.mapping.min',
            'moment': '/media/packages/moment/min/moment.min',
            'bootstrap-datetimepicker': '/media/packages/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min',
            'blueimp-gallery': '/media/packages/blueimp-gallery/js/blueimp-gallery.min',
            'blueimp-jquery': '/media/packages/blueimp-gallery/js/jquery.blueimp-gallery.min',
            'blueimp-helper': '/media/packages/blueimp-gallery/js/blueimp-helper.min',
            'datatables.net': '/media/packages/datatables.net/js/jquery.dataTables.min',
            'datatables.net-bs': '/media/packages/datatables.net-bs/js/dataTables.bootstrap.min',
            'datatables.net-buttons': '/media/packages/datatables.net-buttons/js/dataTables.buttons.min',
            'datatables.net-buttons-print': '/media/packages/datatables.net-buttons/js/buttons.print.min',
            'datatables.net-buttons-html5': '/media/packages/datatables.net-buttons/js/buttons.html5.min',
            'datatables.net-buttons-bs': '/media/packages/datatables.net-buttons-bs/js/buttons.bootstrap.min',
            'datatables.net-responsive': '/media/packages/datatables.net-responsive/js/dataTables.responsive',
            'datatables.net-responsive-bs': '/media/packages/datatables.net-responsive-bs/js/responsive.bootstrap',
            'chosen': '/media/packages/chosen-js/chosen.jquery.min',
            'mapbox-gl': '/media/packages/mapbox-gl/dist/mapbox-gl',
            'mapbox-gl-draw': '/media/packages/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw',
            'mapbox-gl-geocoder': '/media/packages/@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.min',
            'proj4': '/media/packages/proj4/dist/proj4',
            'noUiSlider': '/media/packages/nouislider/distribute/nouislider.min',
            'geojson-extent': '/media/packages/@mapbox/geojson-extent/geojson-extent',
            'geojsonhint': '/media/packages/@mapbox/geojsonhint/geojsonhint',
            'bootstrap-colorpicker': '/media/packages/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min',
            'uuid': '/media/packages/uuidjs/dist/uuid.core',
            'turf': '/media/packages/@turf/turf/turf.min',
            'geohash': '/media/packages/latlon-geohash/latlon-geohash',
            'leaflet': '/media/packages/leaflet/dist/leaflet',
            'leaflet-iiif': '/media/packages/leaflet-iiif/leaflet-iiif',
            'leaflet-draw': '/media/packages/leaflet-draw/dist/leaflet.draw',
            'leaflet-fullscreen': '/media/packages/leaflet.fullscreen/Control.FullScreen',
            'metismenu': '/media/packages/metismenu/dist/metisMenu.min',
            'knockstrap': '/media/packages/knockstrap/build/knockstrap.min',
            'jqtree': '/media/packages/jqtree/tree.jquery',
            'core-js':'/media/packages/core-js/client/shim.min',
            'dom-4': '/media/packages/dom4/build/dom4',
            'numeral': '/media/packages/numeral/numeral',
            'togeojson': '/media/packages/@tmcw/togeojson/dist/togeojson.umd',
            'cytoscape': '/media/packages/cytoscape/dist/cytoscape.min',
            'cytoscape-cola': '/media/packages/cytoscape-cola/cytoscape-cola',
            'webcola': '/media/packages/webcola/WebCola/cola.min',
            
        },
        packages: [{
            name: "codemirror",
            location: '/media/packages/codemirror',
            main: "lib/codemirror"
        }],
        shim: {
            'nifty': {
                exports: 'nifty',
                deps: ['bootstrap', 'jquery', 'jquery-ui', 'metismenu']
            },
            'metismenu': {
                deps: ['jquery', 'jquery-ui']
            },
            'chosen': {
                deps: ['jquery']
            },
            'bootstrap': {
                deps: ['jquery', 'jquery-ui']
            },
            'knockout-mapping': {
                deps: ['knockout']
            },
            'jquery-validate': {
                deps: ['jquery']
            },
            'jquery-ui': {
                deps: ['jquery']
            },
            'jqtree': {
                deps: ['jquery']
            },
            'datatables': {
                deps: ['jquery']
            },
            'datatables.net': {
                deps: ['jquery']
            },
            'datatables.net-buttons-bs': {
                deps: ['datatables.net-buttons']
            },
            'noUiSlider': {
                deps: ['jquery'],
                exports : '$'
            },
            'jquery': {
                deps: ['jquery-lib'],
                exports : '$'
            },
            'mapbox-gl-draw': {
                deps: ['mapbox-gl']
            },
            'select2': {
                deps: ['jquery'],
            },
            'moment': {
                deps: ['jquery']
            },
            'uuid': {
                exports: 'UUID'
            },
            'geohash': {
                exports: 'Geohash'
            },
            'leaflet-iiif': {
                deps: ['leaflet']
            },
            'leaflet-draw': {
                deps: ['leaflet']
            },
            'leaflet-fullscreen': {
                deps: ['leaflet']
            },
            'ckeditor': {
                deps: ['jquery']
            },
            'ckeditor-jquery': {
                deps: ['ckeditor']
            },
            
        }
    });
</script>



<script>
    require(['utils/set-csrf-token']);

    // put values here that should be accessible application wide
    define('arches', [], function () {
        return {
            urls: {
                root: "/",
                home: "/index.htm",
                media: "/media/",
                rdm: "/rdm/",
                uploadedfiles: "/files/",
                url_subpath: "",
                concept_tree: "/concepts/tree/",
                concept: "/concepts/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                concept_search: "/concepts/search",
                concept_value: "/conceptvalue/",
                concept_manage_parents: "/concepts/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/manage_parents/",
                concept_make_collection: "/concepts/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/make_collection/",
                change_password: "/auth/password",
                export_concept: "/concepts/export/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                export_concept_collections: "/concepts/export/collections",
                get_concept_collections: "/concepts/collections",
                dropdown: "/concepts/dropdown",
                paged_dropdown: "/concepts/paged_dropdown",
                get_pref_label: "/concepts/get_pref_label",
                from_sparql_endpoint: "/concepts/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/from_sparql_endpoint",
                search_sparql_endpoint: "/concepts/search_sparql_endpoint",
                confirm_delete: "/concepts/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/confirm_delete/",
                search_terms: "/search/terms",
                search_results: "/search/resources",
                export_results: "/search/export_results",
                get_export_file: "/search/get_export_file",
                buffer: "/buffer/",
                config: "/settings/",
                node: "/node/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                graph_nodes: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/nodes".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                nodegroup: "/nodegroup/",
                node_layer: "/node_layer/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                graph: "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                graph_designer: function(graphid){return "/graph_designer/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                graph_settings: function(graphid){return "/graph_settings/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                get_notifications: "/notifications",
                dismiss_notifications: "/notifications/dismiss",
                get_notification_types: "/notifications/get_types",
                update_notification_types: "/notifications/update_types",
                card: "/card/",
                reorder_cards: "/reorder_cards/",
                resource: "/resource",
                resource_editor: "/resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                resource_copy: "/resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/copy".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                resource_report: "/report/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                resource_edit_log: "/resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/history".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                get_resource_edit_log: function(graphid){return "/resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/history".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                resource_data: "/resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/data/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace(/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/g, ''),
                resource_cards: "/resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/cards".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                related_resources: "/resource/related/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                resource_descriptors: "/resource/descriptors/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                resource_tiles: "/resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/tiles",
                tile: "/tile",
                reorder_tiles: "/tiles/reorder_tiles",
                reorder_nodes: "/graph/reorder_nodes",
                delete_provisional_tile: "/tiles/delete_provisional_tile",
                tile_history: "/tiles/tile_history",
                download_files: "/tiles/download_files",
                apply_functions: "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/apply_functions".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                remove_functions: "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/remove_functions".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                time_wheel_config: "/search/time_wheel_config",
                reindex: "/admin/reindex/resources",
                permission_data: "/graph/permissions",
                resource_permission_data: "/resource/permissions",
                permission_manager_data: "/graph/permissions/permission_manager_data",
                get_user_names: "/user/get_user_names",
                feature_popup_content: "/feature_popup_content",
                related_resource_candidates: "/resource/related/candidates",
                relatable_resources: "/resource/related/relatable",
                get_domain_connections: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/get_domain_connections".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                clone_graph: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/clone".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                export_graph: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/export".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                delete_graph: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/delete".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                delete_instances: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/delete_instances".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                export_mapping_file: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/export_mapping_file".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                add_resource: function(graphid){return "/add-resource/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                function_manager: function(graphid){return "/graph/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/function_manager".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', graphid)},
                mobile_survey_resources: function(surveyid){return "/mobile_survey_resources/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/resources".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', surveyid)},
                collector_designer: function(surveyid){return "/collector_designer/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', surveyid)},
                plugin: function(pluginid){return "/plugins/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', pluginid)},
                transaction_reverse: function(transactionid) {return "/transaction/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/reverse".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', transactionid)},
                mvt: function(nodeid){return decodeURI("/mvt/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/%7Bz%7D/%7Bx%7D/%7By%7D.pbf").replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', nodeid)},
                collector_manager: "/collector_manager",
                help_template: "/help-templates",
                graphs_api: "/graphs/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                api_card: "/cards/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', ''),
                api_tiles: function (tileid) {
                    return "/api/tiles/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', tileid)
                },
                api_nodes: function (nodeid) {
                    return "/api/nodes/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', nodeid)
                },
                api_node_value: "/api/node_value/",
                api_resource_report: function(resourceid){return "/api/resource_report/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', resourceid)},
                api_bulk_resource_report: "/api/bulk_resource_report",
                api_bulk_disambiguated_resource_instance: "/api/bulk_disambiguated_resource_instance",
                api_resources: function(resourceid){return "/resources/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa".replace('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', resourceid)},
                api_search_component_data: "/search_component_data/aaaa".replace('aaaa', ''),
                geojson: "/geojson",
                icons: "/icons",
                ontology_properties: "/ontology_properties",
                iiifmanifest: "/iiifmanifest",
                manifest_manager: "/image-service-manager",
                iiifannotations: "/iiifannotations",
                iiifannotationnodes: "/iiifannotationnodes",
                validatejson: "/validate/aaaa".replace('aaaa', ''),
                get_dsl: "/search/get_dsl",
                
            },
            geocoderPlaceHolder: "Find an address...",
            confirmNav: {
                title: "Edits pending...",
                text: "You currently have edits pending, are you sure you would like to proceed (and discard any pending edits)?"
            },
            confirmGraphDelete: {
                title: "Delete Branch/Resource Model?",
                text: "Deleting this branch/resource model will remove it (and all associated data) entirely.  Are you sure you would like to proceed?"
            },
            confirmAllResourceDelete: {
                title: "Delete All Resources Associated with this Graph?",
                text: "Deleting All Resources removes all associated data with this graph entirely.  Are you sure you would like to proceed?"
            },
            confirmResourceDelete: {
                title: "Delete Resource?",
                text: "Deleting this resource will remove it (and all associated data) entirely.  Are you sure you would like to proceed?"
            },
            confirmMaplayerDelete: {
                title: "Delete map layer?",
                text: "Deleting this map layer will remove it entirely.  You cannot undo this action.  Are you sure you would like to proceed?"
            },
            confirmSurveyDelete: {
                title: "Delete survey?",
                text: "Deleting this survey will remove it entirely.  You cannot undo this action.  Are you sure you would like to proceed?"
            },
            graphImportFailed: {
                title: "Graph import failed."
            },
            requestFailed: {
                title: "Request Failed...",
                text: "Sorry! The request failed. Please try again.  Contact your system administrator if the problem persists."
            },
            resourceCopySuccess: {
                title: "Resource Successfully Copied."
            },
            resourceCopyFailed: {
                title: "Resource Copy Failed...",
                text: "Sorry! The copy request failed. Please try again.  Contact your system administrator if the problem persists."
            },
            mapboxApiKey: 'pk.eyJ1IjoiZWNvY2NhIiwiYSI6ImNsMW1heTFybTAwdHgzYnBnZjEyMjNoY3UifQ._y27GbzWiZidHjL6iPDxOQ',
            hexBinSize: 100,
            mapboxSprites: 'mapbox://sprites/mapbox/basic-v9',
            mapboxGlyphs: 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf',
            hexBinBounds: [-122.0, -52.0, 128.0, 69.0],
            mapDefaultX: 3.0,
            mapDefaultY: 8.5,
            mapDefaultZoom: 0,
            mapDefaultMinZoom: 0,
            mapDefaultMaxZoom: 20,
            preferredCoordinateSystems: [{"default": true, "name": "Geographic", "proj4": "+proj=longlat +datum=WGS84 +no_defs", "srid": "4326"}],
            useSemanticRelationships: true,
            geocoderDefault: '10000000-0000-0000-0000-010000000000',
            mapMarkers: [],
            mapSources: {
                'mapbox-streets': {"url": "mapbox://mapbox.mapbox-streets-v8", "type": "vector"},
            
                'mapbox-satellite': {"url": "mapbox://mapbox.satellite", "type": "raster", "tileSize": 256},
            
                'geocode-point': {"data": {"type": "FeatureCollection", "features": []}, "type": "geojson"},
            
                'search-query': {"data": {"type": "FeatureCollection", "features": []}, "type": "geojson"},
            
                'resources-6c874bcf-c071-11e9-9605-a4d18cec433a': {"type": "vector", "tiles": ["/mvt/6c874bcf-c071-11e9-9605-a4d18cec433a/{z}/{x}/{y}.pbf"]},
            
                'resources-d80e5eaa-32ea-11ec-a2aa-024e0d439fdb': {"type": "vector", "tiles": ["/mvt/d80e5eaa-32ea-11ec-a2aa-024e0d439fdb/{z}/{x}/{y}.pbf"]},
            },
            mapLayers: [{
                'maplayerid': '58e9194b-bbe4-11ec-a0f5-cfc5dbc1153c',
                'name': 'satellite',
                'layer_definitions': [{"id": "satellite", "type": "raster", "source": "mapbox-satellite", "source-layer": "mapbox_satellite_full"}],
                'isoverlay': false,
                'icon': '',
                'legend': '',
                'searchonly': false,
                'activated': true,
                'addtomap': false,
                'is_resource_layer': false,
                'centerx': null,
                'centery': null,
                'zoom': null
            },{
                'maplayerid': '58e9194c-bbe4-11ec-a0f5-abbc7a5c3fec',
                'name': 'streets',
                'layer_definitions': [{"id": "land", "type": "background", "paint": {"background-color": "hsl(40, 46%, 86%)"}, "layout": {}, "metadata": {"mapbox:group": "Land, water, & sky, land", "mapbox:featureComponent": "land-and-water"}}, {"id": "national-park", "type": "fill", "paint": {"fill-color": "hsl(78, 50%, 73%)", "fill-opacity": ["interpolate", ["linear"], ["zoom"], 5, 0, 6, 0.5, 10, 0.5]}, "filter": ["==", ["get", "class"], "national_park"], "layout": {}, "source": "mapbox-streets", "minzoom": 5, "metadata": {"mapbox:group": "Land, water, & sky, land", "mapbox:featureComponent": "land-and-water"}, "source-layer": "landuse_overlay"}, {"id": "landuse", "type": "fill", "paint": {"fill-color": ["interpolate", ["linear"], ["zoom"], 15, ["match", ["get", "class"], "park", "hsl(78, 50%, 73%)", "airport", "hsl(225, 49%, 88%)", "cemetery", "hsl(60, 49%, 79%)", "glacier", "hsl(205, 56%, 88%)", "hospital", "hsl(3, 47%, 84%)", "pitch", "hsl(78, 51%, 68%)", "sand", "hsl(43, 50%, 83%)", "school", "hsl(40, 47%, 78%)", "hsl(40, 49%, 82%)"], 16, ["match", ["get", "class"], "park", "hsl(78, 50%, 73%)", "airport", "hsl(225, 63%, 86%)", "cemetery", "hsl(60, 49%, 79%)", "glacier", "hsl(205, 56%, 88%)", "hospital", "hsl(3, 46%, 86%)", "pitch", "hsl(78, 51%, 68%)", "sand", "hsl(43, 50%, 83%)", "school", "hsl(40, 47%, 78%)", "hsl(40, 49%, 82%)"]], "fill-opacity": ["interpolate", ["linear"], ["zoom"], 5, 0, 6, ["match", ["get", "class"], "glacier", 0.5, 1]]}, "filter": ["match", ["get", "class"], ["park", "airport", "glacier", "pitch", "sand", "facility"], true, "cemetery", true, "school", true, "hospital", true, false], "layout": {}, "source": "mapbox-streets", "minzoom": 5, "metadata": {"mapbox:group": "Land, water, & sky, land", "mapbox:featureComponent": "land-and-water"}, "source-layer": "landuse"}, {"id": "pitch-outline", "type": "line", "paint": {"line-color": "hsl(60, 29%, 81%)"}, "filter": ["==", ["get", "class"], "pitch"], "layout": {}, "source": "mapbox-streets", "minzoom": 15, "metadata": {"mapbox:group": "Land, water, & sky, land", "mapbox:featureComponent": "land-and-water"}, "source-layer": "landuse"}, {"id": "waterway", "type": "line", "paint": {"line-color": "hsl(205, 76%, 70%)", "line-width": ["interpolate", ["exponential", 1.3], ["zoom"], 9, ["match", ["get", "class"], ["canal", "river"], 0.1, 0], 20, ["match", ["get", "class"], ["canal", "river"], 8, 3]], "line-opacity": ["interpolate", ["linear"], ["zoom"], 8, 0, 8.5, 1]}, "layout": {"line-cap": ["step", ["zoom"], "butt", 11, "round"], "line-join": "round"}, "source": "mapbox-streets", "minzoom": 8, "metadata": {"mapbox:group": "Land, water, & sky, water", "mapbox:featureComponent": "land-and-water"}, "source-layer": "waterway"}, {"id": "water", "type": "fill", "paint": {"fill-color": "hsl(205, 76%, 70%)"}, "layout": {}, "source": "mapbox-streets", "metadata": {"mapbox:group": "Land, water, & sky, water", "mapbox:featureComponent": "land-and-water"}, "source-layer": "water"}, {"id": "land-structure-polygon", "type": "fill", "paint": {"fill-color": "hsl(40, 46%, 86%)"}, "filter": ["all", ["==", ["geometry-type"], "Polygon"], ["==", ["get", "class"], "land"]], "layout": {}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Land, water, & sky, built", "mapbox:featureComponent": "land-and-water"}, "source-layer": "structure"}, {"id": "land-structure-line", "type": "line", "paint": {"line-color": "hsl(40, 46%, 86%)", "line-width": ["interpolate", ["exponential", 1.99], ["zoom"], 14, 0.75, 20, 40]}, "filter": ["all", ["==", ["geometry-type"], "LineString"], ["==", ["get", "class"], "land"]], "layout": {"line-cap": "round"}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Land, water, & sky, built", "mapbox:featureComponent": "land-and-water"}, "source-layer": "structure"}, {"id": "aeroway-polygon", "type": "fill", "paint": {"fill-color": ["interpolate", ["linear"], ["zoom"], 15, "hsl(225, 37%, 79%)", 16, "hsl(225, 19%, 81%)"], "fill-opacity": ["interpolate", ["linear"], ["zoom"], 11, 0, 11.5, 1]}, "filter": ["all", ["==", ["geometry-type"], "Polygon"], ["match", ["get", "type"], ["runway", "taxiway", "helipad"], true, false]], "layout": {}, "source": "mapbox-streets", "minzoom": 11, "metadata": {"mapbox:group": "Transit, built", "mapbox:featureComponent": "transit"}, "source-layer": "aeroway"}, {"id": "aeroway-line", "type": "line", "paint": {"line-color": ["interpolate", ["linear"], ["zoom"], 15, "hsl(225, 37%, 79%)", 16, "hsl(225, 19%, 81%)"], "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 9, ["match", ["get", "type"], "runway", 1, 0.5], 18, ["match", ["get", "type"], "runway", 80, 20]]}, "filter": ["==", ["geometry-type"], "LineString"], "layout": {}, "source": "mapbox-streets", "minzoom": 9, "metadata": {"mapbox:group": "Transit, built", "mapbox:featureComponent": "transit"}, "source-layer": "aeroway"}, {"id": "building-outline", "type": "line", "paint": {"line-color": "hsl(40, 42%, 77%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 15, 0.75, 20, 3], "line-opacity": ["interpolate", ["linear"], ["zoom"], 15, 0, 16, 1]}, "filter": ["all", ["!=", ["get", "type"], "building:part"], ["==", ["get", "underground"], "false"]], "layout": {}, "source": "mapbox-streets", "minzoom": 15, "metadata": {"mapbox:group": "Buildings, built", "mapbox:featureComponent": "buildings"}, "source-layer": "building"}, {"id": "building", "type": "fill", "paint": {"fill-color": ["interpolate", ["linear"], ["zoom"], 15, "hsl(40, 45%, 83%)", 16, "hsl(40, 41%, 82%)"], "fill-opacity": ["interpolate", ["linear"], ["zoom"], 15, 0, 16, 1], "fill-outline-color": "hsl(40, 42%, 77%)"}, "filter": ["all", ["!=", ["get", "type"], "building:part"], ["==", ["get", "underground"], "false"]], "layout": {}, "source": "mapbox-streets", "minzoom": 15, "metadata": {"mapbox:group": "Buildings, built", "mapbox:featureComponent": "buildings"}, "source-layer": "building"}, {"id": "tunnel-path", "type": "line", "paint": {"line-color": "hsl(40, 42%, 77%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 15, 1, 18, 4], "line-dasharray": ["step", ["zoom"], ["literal", [1, 0]], 15, ["literal", [1.75, 1]], 16, ["literal", [1, 0.75]], 17, ["literal", [1, 0.5]]]}, "filter": ["all", ["==", ["get", "structure"], "tunnel"], ["==", ["get", "class"], "path"], ["!=", ["get", "type"], "steps"], ["==", ["geometry-type"], "LineString"]], "layout": {}, "source": "mapbox-streets", "minzoom": 14, "metadata": {"mapbox:group": "Walking, cycling, etc., tunnels", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "tunnel-steps", "type": "line", "paint": {"line-color": "hsl(40, 42%, 77%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 15, 1, 16, 1.6, 18, 6], "line-dasharray": ["step", ["zoom"], ["literal", [1, 0]], 15, ["literal", [1.75, 1]], 16, ["literal", [1, 0.75]], 17, ["literal", [0.3, 0.3]]]}, "filter": ["all", ["==", ["get", "structure"], "tunnel"], ["==", ["get", "type"], "steps"], ["==", ["geometry-type"], "LineString"]], "layout": {}, "source": "mapbox-streets", "minzoom": 14, "metadata": {"mapbox:group": "Walking, cycling, etc., tunnels", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "tunnel-pedestrian", "type": "line", "paint": {"line-color": "hsl(40, 42%, 77%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 14, 0.5, 18, 12], "line-dasharray": ["step", ["zoom"], ["literal", [1, 0]], 15, ["literal", [1.5, 0.4]], 16, ["literal", [1, 0.2]]]}, "filter": ["all", ["==", ["get", "structure"], "tunnel"], ["==", ["get", "class"], "pedestrian"], ["==", ["geometry-type"], "LineString"]], "layout": {}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Walking, cycling, etc., tunnels", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "tunnel-simple", "type": "line", "paint": {"line-color": "hsl(38, 55%, 93%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 13, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 4, ["secondary", "tertiary"], 2.5, ["motorway_link", "trunk_link", "street", "street_limited", "primary_link"], 1, 0.5], 18, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 32, ["secondary", "tertiary"], 26, ["motorway_link", "trunk_link", "street", "street_limited", "primary_link"], 18, 12]]}, "filter": ["all", ["==", ["get", "structure"], "tunnel"], ["step", ["zoom"], ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "secondary", "tertiary", "street", "street_limited", "primary_link", "track"], true, false], 14, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link", "street", "street_limited", "service", "track"], true, false]], ["==", ["geometry-type"], "LineString"]], "layout": {}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Road network, tunnels", "mapbox:featureComponent": "road-network"}, "source-layer": "road"}, {"id": "road-path", "type": "line", "paint": {"line-color": "hsl(40, 47%, 96%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 13, 0.5, 14, 1, 15, 1, 18, 4], "line-dasharray": ["step", ["zoom"], ["literal", [4, 0.3]], 15, ["literal", [1.75, 0.3]], 16, ["literal", [1, 0.3]], 17, ["literal", [1, 0.25]]]}, "filter": ["all", ["==", ["get", "class"], "path"], ["step", ["zoom"], ["!", ["match", ["get", "type"], ["steps", "sidewalk", "crossing"], true, false]], 16, ["!=", ["get", "type"], "steps"]], ["match", ["get", "structure"], ["none", "ford"], true, false], ["==", ["geometry-type"], "LineString"]], "layout": {"line-join": ["step", ["zoom"], "miter", 14, "round"]}, "source": "mapbox-streets", "minzoom": 12, "metadata": {"mapbox:group": "Walking, cycling, etc., surface", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "road-steps", "type": "line", "paint": {"line-color": "hsl(40, 47%, 96%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 15, 1, 16, 1.6, 18, 6], "line-dasharray": ["step", ["zoom"], ["literal", [1, 0]], 15, ["literal", [1.75, 1]], 16, ["literal", [1, 0.75]], 17, ["literal", [0.3, 0.3]]]}, "filter": ["all", ["==", ["get", "type"], "steps"], ["match", ["get", "structure"], ["none", "ford"], true, false], ["==", ["geometry-type"], "LineString"]], "layout": {"line-join": "round"}, "source": "mapbox-streets", "minzoom": 14, "metadata": {"mapbox:group": "Walking, cycling, etc., surface", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "road-pedestrian", "type": "line", "paint": {"line-color": "hsl(40, 47%, 96%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 14, 0.5, 18, 12], "line-dasharray": ["step", ["zoom"], ["literal", [1, 0]], 15, ["literal", [1.5, 0.4]], 16, ["literal", [1, 0.2]]]}, "filter": ["all", ["==", ["get", "class"], "pedestrian"], ["match", ["get", "structure"], ["none", "ford"], true, false], ["==", ["geometry-type"], "LineString"]], "layout": {"line-join": ["step", ["zoom"], "miter", 14, "round"]}, "source": "mapbox-streets", "minzoom": 12, "metadata": {"mapbox:group": "Walking, cycling, etc., surface", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "road-simple", "type": "line", "paint": {"line-color": ["match", ["get", "class"], ["primary_link", "secondary_link", "tertiary_link", "street", "street_limited", "service", "track"], "hsl(38, 55%, 97%)", "hsl(38, 55%, 100%)"], "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 5, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 0.75, ["secondary", "tertiary"], 0.1, 0], 13, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 4, ["secondary", "tertiary"], 2.5, ["motorway_link", "trunk_link", "primary_link", "street", "street_limited"], 1, 0.5], 18, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 32, ["secondary", "tertiary"], 26, ["motorway_link", "trunk_link", "primary_link", "street", "street_limited"], 18, 10]]}, "filter": ["all", ["step", ["zoom"], ["match", ["get", "class"], ["motorway", "trunk"], true, false], 6, ["match", ["get", "class"], ["motorway", "trunk", "primary"], true, false], 8, ["match", ["get", "class"], ["motorway", "trunk", "primary", "secondary"], true, false], 10, ["match", ["get", "class"], ["motorway", "trunk", "primary", "secondary", "tertiary", "motorway_link", "trunk_link"], true, false], 11, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "secondary", "tertiary", "street"], true, false], 12, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "secondary", "tertiary", "street", "street_limited", "primary_link"], true, false], 13, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "secondary", "tertiary", "street", "street_limited", "primary_link", "track"], true, false], 14, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link", "street", "street_limited", "service", "track"], true, false]], ["match", ["get", "structure"], ["none", "ford"], true, false], ["==", ["geometry-type"], "LineString"]], "layout": {"line-cap": ["step", ["zoom"], "butt", 14, "round"], "line-join": ["step", ["zoom"], "miter", 14, "round"]}, "source": "mapbox-streets", "minzoom": 5, "metadata": {"mapbox:group": "Road network, surface", "mapbox:featureComponent": "road-network"}, "source-layer": "road"}, {"id": "bridge-path", "type": "line", "paint": {"line-color": "hsl(40, 47%, 96%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 15, 1, 18, 4], "line-dasharray": ["step", ["zoom"], ["literal", [4, 0.3]], 15, ["literal", [1.75, 0.3]], 16, ["literal", [1, 0.3]], 17, ["literal", [1, 0.25]]]}, "filter": ["all", ["==", ["get", "structure"], "bridge"], ["==", ["get", "class"], "path"], ["==", ["geometry-type"], "LineString"], ["!=", ["get", "type"], "steps"]], "layout": {"line-join": "round"}, "source": "mapbox-streets", "minzoom": 14, "metadata": {"mapbox:group": "Walking, cycling, etc., barriers-bridges", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "bridge-steps", "type": "line", "paint": {"line-color": "hsl(40, 47%, 96%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 15, 1, 16, 1.6, 18, 6], "line-dasharray": ["step", ["zoom"], ["literal", [1, 0]], 15, ["literal", [1.75, 1]], 16, ["literal", [1, 0.75]], 17, ["literal", [0.3, 0.3]]]}, "filter": ["all", ["==", ["get", "type"], "steps"], ["==", ["get", "structure"], "bridge"], ["==", ["geometry-type"], "LineString"]], "layout": {"line-join": "round"}, "source": "mapbox-streets", "minzoom": 14, "metadata": {"mapbox:group": "Walking, cycling, etc., barriers-bridges", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "bridge-pedestrian", "type": "line", "paint": {"line-color": "hsl(40, 47%, 96%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 14, 0.5, 18, 12], "line-dasharray": ["step", ["zoom"], ["literal", [1, 0]], 15, ["literal", [1.5, 0.4]], 16, ["literal", [1, 0.2]]]}, "filter": ["all", ["==", ["get", "structure"], "bridge"], ["==", ["get", "class"], "pedestrian"], ["==", ["geometry-type"], "LineString"]], "layout": {"line-join": "round"}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Walking, cycling, etc., barriers-bridges", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "bridge-case-simple", "type": "line", "paint": {"line-color": "hsl(40, 46%, 86%)", "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 13, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 6, ["secondary", "tertiary"], 4, ["motorway_link", "trunk_link", "street", "street_limited", "primary_link"], 2.5, 1.25], 18, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 36, ["secondary", "tertiary"], 30, ["motorway_link", "trunk_link", "street", "street_limited", "primary_link"], 22, 16]]}, "filter": ["all", ["==", ["get", "structure"], "bridge"], ["step", ["zoom"], ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "secondary", "tertiary", "street", "street_limited", "primary_link", "track"], true, false], 14, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link", "street", "street_limited", "service", "track"], true, false]], ["==", ["geometry-type"], "LineString"]], "layout": {"line-join": ["step", ["zoom"], "miter", 14, "round"]}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Road network, bridges", "mapbox:featureComponent": "road-network"}, "source-layer": "road"}, {"id": "bridge-simple", "type": "line", "paint": {"line-color": ["match", ["get", "class"], ["primary_link", "secondary_link", "tertiary_link", "street", "street_limited", "service", "track"], "hsl(38, 55%, 97%)", "hsl(38, 55%, 100%)"], "line-width": ["interpolate", ["exponential", 1.5], ["zoom"], 13, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 4, ["secondary", "tertiary"], 2.5, ["motorway_link", "trunk_link", "street", "street_limited", "primary_link"], 1, 0.5], 18, ["match", ["get", "class"], ["motorway", "trunk", "primary"], 32, ["secondary", "tertiary"], 26, ["motorway_link", "trunk_link", "street", "street_limited", "primary_link"], 18, 12]]}, "filter": ["all", ["==", ["get", "structure"], "bridge"], ["step", ["zoom"], ["match", ["get", "class"], ["motorway", "trunk"], true, false], 13, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "secondary", "tertiary", "street", "street_limited", "primary_link", "track"], true, false], 14, ["match", ["get", "class"], ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link", "street", "street_limited", "service", "track"], true, false]], ["==", ["geometry-type"], "LineString"]], "layout": {"line-cap": ["step", ["zoom"], "butt", 14, "round"], "line-join": ["step", ["zoom"], "miter", 14, "round"]}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Road network, bridges", "mapbox:featureComponent": "road-network"}, "source-layer": "road"}, {"id": "admin-1-boundary-bg", "type": "line", "paint": {"line-blur": ["interpolate", ["linear"], ["zoom"], 3, 0, 8, 3], "line-color": ["interpolate", ["linear"], ["zoom"], 8, "hsl(40, 46%, 86%)", 16, "hsl(0, 0%, 87%)"], "line-width": ["interpolate", ["linear"], ["zoom"], 7, 3.75, 12, 5.5], "line-opacity": ["interpolate", ["linear"], ["zoom"], 7, 0, 8, 0.75], "line-dasharray": [1, 0]}, "filter": ["all", ["==", ["get", "admin_level"], 1], ["==", ["get", "maritime"], "false"], ["match", ["get", "worldview"], ["all", "US"], true, false]], "layout": {"line-join": "bevel"}, "source": "mapbox-streets", "minzoom": 7, "metadata": {"mapbox:group": "Administrative boundaries, admin", "mapbox:featureComponent": "admin-boundaries"}, "source-layer": "admin"}, {"id": "admin-0-boundary-bg", "type": "line", "paint": {"line-blur": ["interpolate", ["linear"], ["zoom"], 3, 0, 10, 2], "line-color": ["interpolate", ["linear"], ["zoom"], 6, "hsl(40, 46%, 86%)", 8, "hsl(0, 0%, 87%)"], "line-width": ["interpolate", ["linear"], ["zoom"], 3, 3.5, 10, 8], "line-opacity": ["interpolate", ["linear"], ["zoom"], 3, 0, 4, 0.5]}, "filter": ["all", ["==", ["get", "admin_level"], 0], ["==", ["get", "maritime"], "false"], ["match", ["get", "worldview"], ["all", "US"], true, false]], "layout": {}, "source": "mapbox-streets", "minzoom": 1, "metadata": {"mapbox:group": "Administrative boundaries, admin", "mapbox:featureComponent": "admin-boundaries"}, "source-layer": "admin"}, {"id": "admin-1-boundary", "type": "line", "paint": {"line-color": ["interpolate", ["linear"], ["zoom"], 3, "hsl(0, 0%, 77%)", 7, "hsl(0, 0%, 62%)"], "line-width": ["interpolate", ["linear"], ["zoom"], 7, 0.75, 12, 1.5], "line-opacity": ["interpolate", ["linear"], ["zoom"], 2, 0, 3, 1], "line-dasharray": ["step", ["zoom"], ["literal", [2, 0]], 7, ["literal", [2, 2, 6, 2]]]}, "filter": ["all", ["==", ["get", "admin_level"], 1], ["==", ["get", "maritime"], "false"], ["match", ["get", "worldview"], ["all", "US"], true, false]], "layout": {"line-cap": "round", "line-join": "round"}, "source": "mapbox-streets", "minzoom": 2, "metadata": {"mapbox:group": "Administrative boundaries, admin", "mapbox:featureComponent": "admin-boundaries"}, "source-layer": "admin"}, {"id": "admin-0-boundary", "type": "line", "paint": {"line-color": "hsl(0, 0%, 51%)", "line-width": ["interpolate", ["linear"], ["zoom"], 3, 0.5, 10, 2], "line-dasharray": [10, 0]}, "filter": ["all", ["==", ["get", "admin_level"], 0], ["==", ["get", "disputed"], "false"], ["==", ["get", "maritime"], "false"], ["match", ["get", "worldview"], ["all", "US"], true, false]], "layout": {"line-cap": "round", "line-join": "round"}, "source": "mapbox-streets", "minzoom": 1, "metadata": {"mapbox:group": "Administrative boundaries, admin", "mapbox:featureComponent": "admin-boundaries"}, "source-layer": "admin"}, {"id": "admin-0-boundary-disputed", "type": "line", "paint": {"line-color": "hsl(0, 0%, 51%)", "line-width": ["interpolate", ["linear"], ["zoom"], 3, 0.5, 10, 2], "line-dasharray": ["step", ["zoom"], ["literal", [3.25, 3.25]], 6, ["literal", [2.5, 2.5]], 7, ["literal", [2, 2.25]], 8, ["literal", [1.75, 2]]]}, "filter": ["all", ["==", ["get", "disputed"], "true"], ["==", ["get", "admin_level"], 0], ["==", ["get", "maritime"], "false"], ["match", ["get", "worldview"], ["all", "US"], true, false]], "layout": {"line-join": "round"}, "source": "mapbox-streets", "minzoom": 1, "metadata": {"mapbox:group": "Administrative boundaries, admin", "mapbox:featureComponent": "admin-boundaries"}, "source-layer": "admin"}, {"id": "road-label-simple", "type": "symbol", "paint": {"text-color": "hsl(40, 47%, 41%)", "text-halo-color": "hsl(38, 55%, 100%)", "text-halo-width": 1}, "filter": ["match", ["get", "class"], ["motorway", "trunk", "primary", "secondary", "tertiary", "street", "street_limited"], true, false], "layout": {"text-font": ["DIN Pro Regular", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["linear"], ["zoom"], 10, ["match", ["get", "class"], ["motorway", "trunk", "primary", "secondary", "tertiary"], 10, 9], 18, ["match", ["get", "class"], ["motorway", "trunk", "primary", "secondary", "tertiary"], 16, 14]], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-padding": 1, "text-max-angle": 30, "symbol-placement": "line", "text-letter-spacing": 0.01, "text-pitch-alignment": "viewport", "text-rotation-alignment": "map"}, "source": "mapbox-streets", "minzoom": 12, "metadata": {"mapbox:group": "Road network, road-labels", "mapbox:featureComponent": "road-network"}, "source-layer": "road"}, {"id": "path-pedestrian-label", "type": "symbol", "paint": {"text-color": "hsl(40, 47%, 41%)", "text-halo-blur": 1, "text-halo-color": "hsl(40, 46%, 95%)", "text-halo-width": 1}, "filter": ["step", ["zoom"], ["match", ["get", "class"], ["pedestrian"], true, false], 15, ["match", ["get", "class"], ["path", "pedestrian"], true, false]], "layout": {"text-font": ["DIN Pro Regular", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["linear"], ["zoom"], 10, ["match", ["get", "class"], "pedestrian", 9, 6.5], 18, ["match", ["get", "class"], "pedestrian", 14, 13]], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-padding": 1, "text-max-angle": 30, "symbol-placement": "line", "text-letter-spacing": 0.01, "text-pitch-alignment": "viewport", "text-rotation-alignment": "map"}, "source": "mapbox-streets", "minzoom": 12, "metadata": {"mapbox:group": "Walking, cycling, etc., walking-cycling-labels", "mapbox:featureComponent": "walking-cycling"}, "source-layer": "road"}, {"id": "waterway-label", "type": "symbol", "paint": {"text-color": "hsl(205, 44%, 90%)"}, "filter": ["all", ["match", ["get", "class"], ["canal", "river", "stream"], ["match", ["get", "worldview"], ["all", "US"], true, false], ["disputed_canal", "disputed_river", "disputed_stream"], ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["==", ["geometry-type"], "LineString"]], "layout": {"text-font": ["DIN Pro Italic", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["linear"], ["zoom"], 13, 12, 18, 16], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "symbol-spacing": ["interpolate", ["linear", 1], ["zoom"], 15, 250, 17, 400], "text-max-angle": 30, "symbol-placement": "line", "text-pitch-alignment": "viewport"}, "source": "mapbox-streets", "minzoom": 13, "metadata": {"mapbox:group": "Natural features, natural-labels", "mapbox:featureComponent": "natural-features"}, "source-layer": "natural_label"}, {"id": "natural-line-label", "type": "symbol", "paint": {"text-color": ["step", ["zoom"], ["step", ["get", "sizerank"], "hsl(26, 30%, 45%)", 5, "hsl(26, 35%, 35%)"], 17, ["step", ["get", "sizerank"], "hsl(26, 30%, 45%)", 13, "hsl(26, 35%, 35%)"]], "text-halo-blur": 0.5, "text-halo-color": "hsl(40, 53%, 100%)", "text-halo-width": 0.5}, "filter": ["all", ["match", ["get", "class"], ["glacier", "landform"], ["match", ["get", "worldview"], ["all", "US"], true, false], ["disputed_glacier", "disputed_landform"], ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["==", ["geometry-type"], "LineString"], ["<=", ["get", "filterrank"], 2]], "layout": {"text-font": ["DIN Pro Medium", "Arial Unicode MS Regular"], "text-size": ["step", ["zoom"], ["step", ["get", "sizerank"], 18, 5, 12], 17, ["step", ["get", "sizerank"], 18, 13, 12]], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-max-angle": 30, "symbol-placement": "line-center", "text-pitch-alignment": "viewport"}, "source": "mapbox-streets", "minzoom": 4, "metadata": {"mapbox:group": "Natural features, natural-labels", "mapbox:featureComponent": "natural-features"}, "source-layer": "natural_label"}, {"id": "natural-point-label", "type": "symbol", "paint": {"text-color": ["step", ["zoom"], ["step", ["get", "sizerank"], "hsl(26, 30%, 45%)", 5, "hsl(26, 35%, 35%)"], 17, ["step", ["get", "sizerank"], "hsl(26, 30%, 45%)", 13, "hsl(26, 35%, 35%)"]], "icon-opacity": ["step", ["zoom"], ["step", ["get", "sizerank"], 0, 5, 1], 17, ["step", ["get", "sizerank"], 0, 13, 1]], "text-halo-blur": 0.5, "text-halo-color": "hsl(40, 53%, 100%)", "text-halo-width": 0.5}, "filter": ["all", ["match", ["get", "class"], ["dock", "glacier", "landform", "water_feature", "wetland"], ["match", ["get", "worldview"], ["all", "US"], true, false], ["disputed_dock", "disputed_glacier", "disputed_landform", "disputed_water_feature", "disputed_wetland"], ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["==", ["geometry-type"], "Point"], ["<=", ["get", "filterrank"], 2]], "layout": {"text-font": ["DIN Pro Medium", "Arial Unicode MS Regular"], "text-size": ["step", ["zoom"], ["step", ["get", "sizerank"], 18, 5, 12], 17, ["step", ["get", "sizerank"], 18, 13, 12]], "icon-image": ["get", "maki"], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-anchor": ["step", ["zoom"], ["step", ["get", "sizerank"], "center", 5, "top"], 17, ["step", ["get", "sizerank"], "center", 13, "top"]], "text-offset": ["step", ["zoom"], ["step", ["get", "sizerank"], ["literal", [0, 0]], 5, ["literal", [0, 0.75]]], 17, ["step", ["get", "sizerank"], ["literal", [0, 0]], 13, ["literal", [0, 0.75]]]]}, "source": "mapbox-streets", "minzoom": 4, "metadata": {"mapbox:group": "Natural features, natural-labels", "mapbox:featureComponent": "natural-features"}, "source-layer": "natural_label"}, {"id": "water-line-label", "type": "symbol", "paint": {"text-color": ["match", ["get", "class"], ["bay", "ocean", "sea"], "hsl(205, 72%, 90%)", "hsl(205, 44%, 90%)"]}, "filter": ["all", ["match", ["get", "class"], ["bay", "ocean", "reservoir", "sea", "water"], ["match", ["get", "worldview"], ["all", "US"], true, false], ["disputed_bay", "disputed_ocean", "disputed_reservoir", "disputed_sea", "disputed_water"], ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["==", ["geometry-type"], "LineString"]], "layout": {"text-font": ["DIN Pro Italic", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["linear"], ["zoom"], 7, ["step", ["get", "sizerank"], 20, 6, 18, 12, 12], 10, ["step", ["get", "sizerank"], 15, 9, 12], 18, ["step", ["get", "sizerank"], 15, 9, 14]], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-max-angle": 30, "symbol-placement": "line-center", "text-letter-spacing": ["match", ["get", "class"], "ocean", 0.25, ["sea", "bay"], 0.15, 0], "text-pitch-alignment": "viewport"}, "source": "mapbox-streets", "metadata": {"mapbox:group": "Natural features, natural-labels", "mapbox:featureComponent": "natural-features"}, "source-layer": "natural_label"}, {"id": "water-point-label", "type": "symbol", "paint": {"text-color": ["match", ["get", "class"], ["bay", "ocean", "sea"], "hsl(205, 72%, 90%)", "hsl(205, 44%, 90%)"]}, "filter": ["all", ["match", ["get", "class"], ["bay", "ocean", "reservoir", "sea", "water"], ["match", ["get", "worldview"], ["all", "US"], true, false], ["disputed_bay", "disputed_ocean", "disputed_reservoir", "disputed_sea", "disputed_water"], ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["==", ["geometry-type"], "Point"]], "layout": {"text-font": ["DIN Pro Italic", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["linear"], ["zoom"], 7, ["step", ["get", "sizerank"], 20, 6, 15, 12, 12], 10, ["step", ["get", "sizerank"], 15, 9, 12]], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-max-width": ["match", ["get", "class"], "ocean", 4, "sea", 5, ["bay", "water"], 7, 10], "text-line-height": 1.3, "text-letter-spacing": ["match", ["get", "class"], "ocean", 0.25, ["bay", "sea"], 0.15, 0.01]}, "source": "mapbox-streets", "metadata": {"mapbox:group": "Natural features, natural-labels", "mapbox:featureComponent": "natural-features"}, "source-layer": "natural_label"}, {"id": "poi-label", "type": "symbol", "paint": {"text-color": ["step", ["zoom"], ["step", ["get", "sizerank"], ["match", ["get", "class"], "food_and_drink", "hsl(20, 42%, 58%)", "park_like", "hsl(76, 51%, 26%)", "education", "hsl(40, 18%, 45%)", "medical", "hsl(3, 18%, 55%)", "hsl(26, 30%, 45%)"], 5, ["match", ["get", "class"], "food_and_drink", "hsl(20, 74%, 41%)", "park_like", "hsl(76, 50%, 15%)", "education", "hsl(40, 45%, 25%)", "medical", "hsl(3, 24%, 45%)", "hsl(26, 35%, 35%)"]], 17, ["step", ["get", "sizerank"], ["match", ["get", "class"], "food_and_drink", "hsl(20, 42%, 58%)", "park_like", "hsl(76, 51%, 26%)", "education", "hsl(40, 18%, 45%)", "medical", "hsl(3, 18%, 55%)", "hsl(26, 30%, 45%)"], 13, ["match", ["get", "class"], "food_and_drink", "hsl(20, 74%, 41%)", "park_like", "hsl(76, 50%, 15%)", "education", "hsl(40, 45%, 25%)", "medical", "hsl(3, 24%, 45%)", "hsl(26, 35%, 35%)"]]], "icon-opacity": ["step", ["zoom"], ["step", ["get", "sizerank"], 0, 5, 1], 17, ["step", ["get", "sizerank"], 0, 13, 1]], "text-halo-blur": 0.5, "text-halo-color": ["match", ["get", "class"], "park_like", "hsl(78, 55%, 100%)", "education", "hsl(40, 52%, 100%)", "medical", "hsl(3, 51%, 100%)", "hsl(40, 53%, 100%)"], "text-halo-width": 0.5}, "filter": ["<=", ["get", "filterrank"], ["+", ["step", ["zoom"], 0, 16, 1, 17, 2], 2]], "layout": {"text-font": ["DIN Pro Medium", "Arial Unicode MS Regular"], "text-size": ["step", ["zoom"], ["step", ["get", "sizerank"], 18, 5, 12], 17, ["step", ["get", "sizerank"], 18, 13, 12]], "icon-image": ["case", ["has", "maki_beta"], ["coalesce", ["image", ["get", "maki_beta"]], ["image", ["get", "maki"]]], ["image", ["get", "maki"]]], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-anchor": ["step", ["zoom"], ["step", ["get", "sizerank"], "center", 5, "top"], 17, ["step", ["get", "sizerank"], "center", 13, "top"]], "text-offset": ["step", ["zoom"], ["step", ["get", "sizerank"], ["literal", [0, 0]], 5, ["literal", [0, 0.75]]], 17, ["step", ["get", "sizerank"], ["literal", [0, 0]], 13, ["literal", [0, 0.75]]]]}, "source": "mapbox-streets", "minzoom": 6, "metadata": {"mapbox:group": "Point of interest labels, poi-labels", "mapbox:featureComponent": "point-of-interest-labels"}, "source-layer": "poi_label"}, {"id": "airport-label", "type": "symbol", "paint": {"text-color": "hsl(225, 4%, 40%)", "text-halo-color": "hsl(225, 68%, 100%)", "text-halo-width": 1}, "filter": ["match", ["get", "class"], ["military", "civil"], ["match", ["get", "worldview"], ["all", "US"], true, false], ["disputed_military", "disputed_civil"], ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], "layout": {"text-font": ["DIN Pro Medium", "Arial Unicode MS Regular"], "text-size": ["step", ["get", "sizerank"], 18, 9, 12], "icon-image": ["get", "maki"], "text-field": ["step", ["get", "sizerank"], ["coalesce", ["get", "name_en"], ["get", "name"]], 15, ["get", "ref"]], "text-anchor": "top", "text-offset": [0, 0.75], "text-max-width": 9, "text-line-height": 1.1, "text-letter-spacing": 0.01, "text-rotation-alignment": "viewport"}, "source": "mapbox-streets", "minzoom": 8, "metadata": {"mapbox:group": "Transit, transit-labels", "mapbox:featureComponent": "transit"}, "source-layer": "airport_label"}, {"id": "settlement-subdivision-label", "type": "symbol", "paint": {"text-color": "hsl(0, 0%, 27%)", "text-halo-blur": 0.5, "text-halo-color": "hsla(40, 53%, 100%, 0.75)", "text-halo-width": 1}, "filter": ["all", ["match", ["get", "class"], "settlement_subdivision", ["match", ["get", "worldview"], ["all", "US"], true, false], "disputed_settlement_subdivision", ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["<=", ["get", "filterrank"], 3]], "layout": {"text-font": ["DIN Pro Regular", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["cubic-bezier", 0.5, 0, 1, 1], ["zoom"], 11, ["match", ["get", "type"], "suburb", 11, 10.5], 15, ["match", ["get", "type"], "suburb", 15, 14]], "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-padding": 3, "text-max-width": 7, "text-transform": "uppercase", "text-letter-spacing": ["match", ["get", "type"], "suburb", 0.15, 0.1]}, "source": "mapbox-streets", "maxzoom": 15, "minzoom": 10, "metadata": {"mapbox:group": "Place labels, place-labels", "mapbox:featureComponent": "place-labels"}, "source-layer": "place_label"}, {"id": "settlement-minor-label", "type": "symbol", "paint": {"text-color": "hsl(0, 0%, 0%)", "icon-opacity": ["step", ["zoom"], 1, 8, 0], "text-halo-blur": 1, "text-halo-color": "hsl(40, 53%, 100%)", "text-halo-width": 1}, "filter": ["all", ["<=", ["get", "filterrank"], 3], ["match", ["get", "class"], "settlement", ["match", ["get", "worldview"], ["all", "US"], true, false], "disputed_settlement", ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["step", ["zoom"], [">", ["get", "symbolrank"], 6], 4, [">=", ["get", "symbolrank"], 7], 6, [">=", ["get", "symbolrank"], 8], 7, [">=", ["get", "symbolrank"], 10], 10, [">=", ["get", "symbolrank"], 11], 11, [">=", ["get", "symbolrank"], 13], 12, [">=", ["get", "symbolrank"], 15]]], "layout": {"text-font": ["DIN Pro Regular", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["cubic-bezier", 0.2, 0, 0.9, 1], ["zoom"], 3, ["step", ["get", "symbolrank"], 12, 9, 11, 10, 10.5, 12, 9.5, 14, 8.5, 16, 6.5, 17, 4], 13, ["step", ["get", "symbolrank"], 23, 9, 21, 10, 19, 11, 17, 12, 16, 13, 15, 15, 13]], "icon-image": "", "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-anchor": ["step", ["zoom"], "center", 8, "center"], "text-max-width": 7, "text-line-height": 1.1, "text-radial-offset": ["step", ["zoom"], ["match", ["get", "capital"], 2, 0.6, 0.55], 8, 0]}, "source": "mapbox-streets", "maxzoom": 13, "minzoom": 3, "metadata": {"mapbox:group": "Place labels, place-labels", "mapbox:featureComponent": "place-labels"}, "source-layer": "place_label"}, {"id": "settlement-major-label", "type": "symbol", "paint": {"text-color": "hsl(0, 0%, 0%)", "icon-opacity": ["step", ["zoom"], 1, 8, 0], "text-halo-blur": 1, "text-halo-color": "hsl(40, 53%, 100%)", "text-halo-width": 1}, "filter": ["all", ["<=", ["get", "filterrank"], 3], ["match", ["get", "class"], "settlement", ["match", ["get", "worldview"], ["all", "US"], true, false], "disputed_settlement", ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], ["step", ["zoom"], false, 3, ["<=", ["get", "symbolrank"], 6], 4, ["<", ["get", "symbolrank"], 7], 6, ["<", ["get", "symbolrank"], 8], 7, ["<", ["get", "symbolrank"], 10], 10, ["<", ["get", "symbolrank"], 11], 11, ["<", ["get", "symbolrank"], 13], 12, ["<", ["get", "symbolrank"], 15], 13, [">=", ["get", "symbolrank"], 11], 14, [">=", ["get", "symbolrank"], 15]]], "layout": {"text-font": ["DIN Pro Medium", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["cubic-bezier", 0.2, 0, 0.9, 1], ["zoom"], 3, ["step", ["get", "symbolrank"], 13, 6, 12], 6, ["step", ["get", "symbolrank"], 16, 6, 15, 7, 14], 8, ["step", ["get", "symbolrank"], 18, 9, 17, 10, 15], 15, ["step", ["get", "symbolrank"], 23, 9, 22, 10, 20, 11, 18, 12, 16, 13, 15, 15, 13]], "icon-image": "", "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-anchor": ["step", ["zoom"], "center", 8, "center"], "text-max-width": 7, "text-line-height": 1.1, "text-radial-offset": ["step", ["zoom"], ["match", ["get", "capital"], 2, 0.6, 0.55], 8, 0]}, "source": "mapbox-streets", "maxzoom": 15, "minzoom": 3, "metadata": {"mapbox:group": "Place labels, place-labels", "mapbox:featureComponent": "place-labels"}, "source-layer": "place_label"}, {"id": "state-label", "type": "symbol", "paint": {"text-color": "hsl(0, 0%, 0%)", "text-halo-color": "hsl(40, 53%, 100%)", "text-halo-width": 1}, "filter": ["match", ["get", "class"], "state", ["match", ["get", "worldview"], ["all", "US"], true, false], "disputed_state", ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], "layout": {"text-font": ["DIN Pro Bold", "Arial Unicode MS Bold"], "text-size": ["interpolate", ["cubic-bezier", 0.85, 0.7, 0.65, 1], ["zoom"], 4, ["step", ["get", "symbolrank"], 10, 6, 9.5, 7, 9], 9, ["step", ["get", "symbolrank"], 21, 6, 16, 7, 13]], "text-field": ["step", ["zoom"], ["step", ["get", "symbolrank"], ["coalesce", ["get", "name_en"], ["get", "name"]], 5, ["coalesce", ["get", "abbr"], ["get", "name_en"], ["get", "name"]]], 5, ["coalesce", ["get", "name_en"], ["get", "name"]]], "text-max-width": 6, "text-transform": "uppercase", "text-letter-spacing": 0.15}, "source": "mapbox-streets", "maxzoom": 9, "minzoom": 3, "metadata": {"mapbox:group": "Place labels, place-labels", "mapbox:featureComponent": "place-labels"}, "source-layer": "place_label"}, {"id": "country-label", "type": "symbol", "paint": {"text-color": "hsl(0, 0%, 0%)", "icon-opacity": ["step", ["zoom"], ["case", ["has", "text_anchor"], 1, 0], 7, 0], "text-halo-color": ["interpolate", ["linear"], ["zoom"], 2, "hsla(40, 53%, 100%, 0.75)", 3, "hsl(40, 53%, 100%)"], "text-halo-width": 1.25}, "filter": ["match", ["get", "class"], "country", ["match", ["get", "worldview"], ["all", "US"], true, false], "disputed_country", ["all", ["==", ["get", "disputed"], "true"], ["match", ["get", "worldview"], ["all", "US"], true, false]], false], "layout": {"text-font": ["DIN Pro Medium", "Arial Unicode MS Regular"], "text-size": ["interpolate", ["cubic-bezier", 0.2, 0, 0.7, 1], ["zoom"], 1, ["step", ["get", "symbolrank"], 11, 4, 9, 5, 8], 9, ["step", ["get", "symbolrank"], 22, 4, 19, 5, 17]], "icon-image": "", "text-field": ["coalesce", ["get", "name_en"], ["get", "name"]], "text-max-width": 6, "text-line-height": 1.1, "text-radial-offset": ["step", ["zoom"], 0.6, 8, 0]}, "source": "mapbox-streets", "maxzoom": 10, "minzoom": 1, "metadata": {"mapbox:group": "Place labels, place-labels", "mapbox:featureComponent": "place-labels"}, "source-layer": "place_label"}],
                'isoverlay': false,
                'icon': '',
                'legend': '',
                'searchonly': false,
                'activated': true,
                'addtomap': true,
                'is_resource_layer': false,
                'centerx': null,
                'centery': null,
                'zoom': null
            },{
                'maplayerid': '6c874bcf-c071-11e9-9605-a4d18cec433a',
                'name': 'Place - defined by',
                'layer_definitions': [
                {
                    "id": "resources-fill-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "fill",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Polygon"],["==", "total", 1]],
                    "paint": {
                        "fill-color": "rgba(214,170,18,0.93)"
                    }
                },
                {
                    "id": "resources-fill-6c874bcf-c071-11e9-9605-a4d18cec433a-click",
                    "type": "fill",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Polygon"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "fill-color": "rgba(214,170,18,0.93)"
                    }
                },
                {
                    "id": "resources-fill-6c874bcf-c071-11e9-9605-a4d18cec433a-hover",
                    "type": "fill",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Polygon"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "fill-color": "rgba(214,170,18,0.93)"
                    }
                },
                {
                    "id": "resources-poly-outline-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all",["==", "$type", "Polygon"],["==", "total", 1]],
                    "paint": {
                        "line-width": ["case",
                            ["boolean", ["feature-state", "hover"], false],
                            4,
                            2
                        ],
                        "line-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-poly-outline-6c874bcf-c071-11e9-9605-a4d18cec433a-hover",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all",["==", "$type", "Polygon"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "line-width": 4,
                        "line-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-poly-outline-6c874bcf-c071-11e9-9605-a4d18cec433a-click",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all",["==", "$type", "Polygon"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "line-width": 4,
                        "line-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-line-halo-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "LineString"],["==", "total", 1]],
                    "paint": {
                        "line-width": ["case",
                            ["boolean", ["feature-state", "hover"], false],
                            8,
                            4
                        ],
                        "line-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-line-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all",["==", "$type", "LineString"],["==", "total", 1]],
                    "paint": {
                        "line-width": ["case",
                            ["boolean", ["feature-state", "hover"], false],
                            4,
                            2
                        ],
                        "line-color": "rgba(214,170,18,0.93)"
                    }
                },
                {
                    "id": "resources-line-halo-6c874bcf-c071-11e9-9605-a4d18cec433a-hover",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all",["==", "$type", "LineString"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "line-width": 8,
                        "line-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-line-6c874bcf-c071-11e9-9605-a4d18cec433a-hover",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all",["==", "$type", "LineString"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "line-width": 4,
                        "line-color": "rgba(214,170,18,0.93)"
                    }
                },
                {
                    "id": "resources-line-halo-6c874bcf-c071-11e9-9605-a4d18cec433a-click",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "LineString"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "line-width": 8,
                        "line-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-line-6c874bcf-c071-11e9-9605-a4d18cec433a-click",
                    "type": "line",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "LineString"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "line-width": 4,
                        "line-color": "rgba(214,170,18,0.93)"
                    }
                },

                {
                    "id": "resources-point-halo-6c874bcf-c071-11e9-9605-a4d18cec433a-hover",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "circle-radius": 20,
                        "circle-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-point-6c874bcf-c071-11e9-9605-a4d18cec433a-hover",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "circle-radius": 16,
                        "circle-color": "rgba(214,170,18,0.93)"
                    }
                },

                {
                    "id": "resources-point-halo-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],["==", "total", 1]],
                    "paint": {
                        "circle-radius": ["case",
                            ["boolean", ["feature-state", "hover"], false],
                            20,
                            10
                        ],
                        "circle-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-point-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],["==", "total", 1]],
                    "paint": {
                        "circle-radius": ["case",
                            ["boolean", ["feature-state", "hover"], false],
                            16,
                            8
                        ],
                        "circle-color": "rgba(214,170,18,0.93)"
                    }
                },

                {
                    "id": "resources-point-halo-6c874bcf-c071-11e9-9605-a4d18cec433a-click",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "circle-radius": 20,
                        "circle-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-point-6c874bcf-c071-11e9-9605-a4d18cec433a-click",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],["==", "total", 1],["==", "resourceinstanceid", ""]],
                    "paint": {
                        "circle-radius": 16,
                        "circle-color": "rgba(214,170,18,0.93)"
                    }
                },
                {
                    "id": "resources-cluster-point-halo-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],[">", "total", 1]],
                    "paint": {
                        "circle-radius": {
                            "property": "total",
                            "stops": [
                                [0,   22],
                                [50, 24],
                                [100, 26],
                                [200, 28],
                                [400, 30],
                                [800, 32],
                                [1200, 34],
                                [1600, 36],
                                [2000, 38],
                                [2500, 40],
                                [3000, 42],
                                [4000, 44],
                                [5000, 46]
                            ]
                        },
                        "circle-color": "rgba(214,170,18,0.57)"
                    }
                },
                {
                    "id": "resources-cluster-point-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "type": "circle",
                    "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                    "layout": {
                        "visibility": "visible"
                    },
                    "filter": ["all", ["==", "$type", "Point"],[">", "total", 1]],
                    "paint": {
                         "circle-radius": {
                             "property": "total",
                             "type": "exponential",
                             "stops": [
                                 [0,   12],
                                 [50, 14],
                                 [100, 16],
                                 [200, 18],
                                 [400, 20],
                                 [800, 22],
                                 [1200, 24],
                                 [1600, 26],
                                 [2000, 28],
                                 [2500, 30],
                                 [3000, 32],
                                 [4000, 34],
                                 [5000, 36]
                             ]
                         },
                        "circle-color": "rgba(214,170,18,0.93)"
                    }
                },
                {
                     "id": "resources-cluster-count-6c874bcf-c071-11e9-9605-a4d18cec433a",
                     "type": "symbol",
                     "source": "resources-6c874bcf-c071-11e9-9605-a4d18cec433a",
                     "source-layer": "6c874bcf-c071-11e9-9605-a4d18cec433a",
                     "layout": {
                         "text-field": "{total}",
                         "text-size": 10
                     },
                     "paint": {
                        "text-color": "#fff"
                    },
                     "filter": ["all", [">", "total", 1]]
                 }
            ],
                'searchonly': false,
                'isoverlay': true,
                'icon': 'fa fa-map-marker',
                'legend': '',
                'activated': true,
                'addtomap': true,
                'is_resource_layer': true
            },],
            conceptCollections: [],
            geocodingProviders: [{
                'name': 'Mapbox',
                'geocoderid': '10000000-0000-0000-0000-010000000000',
                'api_key':  '' ,
                'component': 'views/components/geocoders/mapbox'
            },],
            resources: [{
              'maplayerid': '03357848-1d9d-11eb-a29f-024e0d439fdb',
              'graphid': '03357848-1d9d-11eb-a29f-024e0d439fdb',
              'name': 'Sampling Activity',
              'icon': 'fa fa-youtube-play',
            },{
              'maplayerid': '0b9235d9-ca85-11e9-9fa2-a4d18cec433a',
              'graphid': '0b9235d9-ca85-11e9-9fa2-a4d18cec433a',
              'name': 'Project',
              'icon': 'fa fa-youtube-play',
            },{
              'maplayerid': 'b6c819b8-99f6-11ea-a9b7-3af9d3b32b71',
              'graphid': 'b6c819b8-99f6-11ea-a9b7-3af9d3b32b71',
              'name': 'Instrument',
              'icon': 'fa fa-binoculars',
            },{
              'maplayerid': '07883c9e-b25c-11e9-975a-a4d18cec433a',
              'graphid': '07883c9e-b25c-11e9-975a-a4d18cec433a',
              'name': 'Group',
              'icon': 'fa fa-users',
            },{
              'maplayerid': '1b210ef3-b25c-11e9-a037-a4d18cec433a',
              'graphid': '1b210ef3-b25c-11e9-a037-a4d18cec433a',
              'name': 'Collection or Set',
              'icon': 'fa fa-cubes',
            },{
              'maplayerid': '615b11ee-c457-11e9-910c-a4d18cec433a',
              'graphid': '615b11ee-c457-11e9-910c-a4d18cec433a',
              'name': 'Observation',
              'icon': 'fa fa-eye',
            },{
              'maplayerid': 'cc8ed633-b25b-11e9-a13a-a4d18cec433a',
              'graphid': 'cc8ed633-b25b-11e9-a13a-a4d18cec433a',
              'name': 'Place',
              'icon': 'fa fa-map-marker',
            },{
              'maplayerid': 'a7b1a7c5-b25b-11e9-8a4e-a4d18cec433a',
              'graphid': 'a7b1a7c5-b25b-11e9-8a4e-a4d18cec433a',
              'name': 'Textual Work',
              'icon': 'fa fa-book',
            },{
              'maplayerid': '9519cb4f-b25b-11e9-8c7b-a4d18cec433a',
              'graphid': '9519cb4f-b25b-11e9-8c7b-a4d18cec433a',
              'name': 'Physical Thing',
              'icon': 'fa fa-asterisk',
            },{
              'maplayerid': 'f71f7b9c-b25b-11e9-901e-a4d18cec433a',
              'graphid': 'f71f7b9c-b25b-11e9-901e-a4d18cec433a',
              'name': 'Person',
              'icon': 'fa fa-user',
            },{
              'maplayerid': '5bece219-c456-11e9-8dcd-a4d18cec433a',
              'graphid': '5bece219-c456-11e9-8dcd-a4d18cec433a',
              'name': 'Modification',
              'icon': 'fa fa-cut',
            },],
            userEmail: '',
            celeryRunning: '',
            exportHtmlTemplates: [],
            graphs: [],
            translations: {
                'deactivateSurveyTitle': 'You are deactivating an active survey',
                'deactivateSurveyMessage': 'Users will not be able to download this survey to their device',
                'activateSurveyTitle': 'You are activating this survey',
                'activateSurveyMessage': 'Users will immediately be able to download this survey and begin collecting data',
                'mapAddPoint': 'Add point',
                'mapAddLine': 'Add line',
                'mapAddPolygon': 'Add polygon',
                'mapSelectDrawing': 'Select drawing',
                'riSelectCreateNew': 'Create a new ${graphName}',
                'riSelectPlaceholder': 'Add new Relationship',
                'reNetworkReponseError': 'Network response was not ok',
                'workflowWastbinWarning': 'You are about to delete ${val}.',
                'workflowWastbinWarning2': 'Are you sure you want to continue?',
                'workflowWastbinWarning3': 'You are about to quit the workflow.',
                'termSearchConcept': 'Concepts',
                'termSearchTerm': 'Term Matches',
                'timeWheelDateMatches': '${total} date values',
                'cardConstraintsPlaceholder': 'Select Widgets',
                'cardFunctionNodeDesc': '(This card data will define the resource description.)',
                'cardFunctionNodeName': '(This card data will define the resource name.)',
                'mobileSurveyNameLong': 'Model Details',
                'mobileSurveyDesc': 'Summary of how this model participates in the survey',
                'groupingErrorTitle': 'Settings Conflict: Remove this card from grouped card?',
                'groupingErrorMessage': "The cardinality of this card can't be changed until you remove it from being grouped with the ${cardName} card.  Do you want to remove this card from being grouped with the ${cardName} card",
            },
            version: '6.0.1'
        };
    });

    define('resource-types', [], function () {
        var resourceTypes = {
            
        };

        return resourceTypes;
    });

    define('widgets', ['views/components/widgets/rich-text','views/components/widgets/file','views/components/widgets/map','views/components/widgets/domain-select','views/components/widgets/domain-radio','views/components/widgets/domain-multiselect','views/components/widgets/domain-checkbox','views/components/widgets/concept-select','views/components/widgets/concept-radio','views/components/widgets/concept-multiselect','views/components/widgets/concept-checkbox','views/components/widgets/datepicker','views/components/widgets/text','views/components/widgets/number','views/components/widgets/resource-instance-select','views/components/widgets/resource-instance-multiselect','views/components/widgets/switch','views/components/widgets/radio-boolean','views/components/widgets/edtf','views/components/widgets/node-value-select','views/components/widgets/urldatatype','views/components/widgets/sample-widget','views/components/widgets/iiif',], function () {
        return {
            '10000000-0000-0000-0000-000000000005': {
                'name': 'rich-text-widget',
                'component': 'views/components/widgets/rich-text',
                'datatype': 'string',
                'defaultconfig': '{}'
            },
        
            '10000000-0000-0000-0000-000000000019': {
                'name': 'file-widget',
                'component': 'views/components/widgets/file',
                'datatype': 'file-list',
                'defaultconfig': '{"rerender": true, "maxFilesize": "200", "acceptedFiles": ""}'
            },
        
            '10000000-0000-0000-0000-000000000007': {
                'name': 'map-widget',
                'component': 'views/components/widgets/map',
                'datatype': 'geojson-feature-collection',
                'defaultconfig': '{"zoom": 0, "pitch": 0.0, "basemap": "streets", "bearing": 0.0, "centerX": 0, "centerY": 0, "maxZoom": 20, "minZoom": 0, "rerender": true, "defaultValue": "", "featureColor": "#FF0000", "geometryTypes": [{"id": "Point", "text": "Point"}, {"id": "Line", "text": "Line"}, {"id": "Polygon", "text": "Polygon"}], "overlayConfigs": [], "overlayOpacity": 0.0, "geocodeProvider": "10000000-0000-0000-0000-010000000000", "geocoderVisible": true, "defaultValueType": "", "featureLineWidth": 1, "featurePointSize": 3, "geocodePlaceholder": "Search"}'
            },
        
            '10000000-0000-0000-0000-000000000015': {
                'name': 'domain-select-widget',
                'component': 'views/components/widgets/domain-select',
                'datatype': 'domain-value',
                'defaultconfig': '{"placeholder": "Select an option", "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000017': {
                'name': 'domain-radio-widget',
                'component': 'views/components/widgets/domain-radio',
                'datatype': 'domain-value',
                'defaultconfig': '{"defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000016': {
                'name': 'domain-multiselect-widget',
                'component': 'views/components/widgets/domain-multiselect',
                'datatype': 'domain-value-list',
                'defaultconfig': '{"placeholder": "Select an option", "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000018': {
                'name': 'domain-checkbox-widget',
                'component': 'views/components/widgets/domain-checkbox',
                'datatype': 'domain-value-list',
                'defaultconfig': '{"defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000002': {
                'name': 'concept-select-widget',
                'component': 'views/components/widgets/concept-select',
                'datatype': 'concept',
                'defaultconfig': '{"options": [], "placeholder": "Select an option", "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000009': {
                'name': 'concept-radio-widget',
                'component': 'views/components/widgets/concept-radio',
                'datatype': 'concept',
                'defaultconfig': '{"options": [], "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000012': {
                'name': 'concept-multiselect-widget',
                'component': 'views/components/widgets/concept-multiselect',
                'datatype': 'concept-list',
                'defaultconfig': '{"options": [], "placeholder": "Select an option", "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000013': {
                'name': 'concept-checkbox-widget',
                'component': 'views/components/widgets/concept-checkbox',
                'datatype': 'concept-list',
                'defaultconfig': '{"options": [], "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000004': {
                'name': 'datepicker-widget',
                'component': 'views/components/widgets/datepicker',
                'datatype': 'date',
                'defaultconfig': '{"maxDate": false, "minDate": false, "viewMode": "days", "placeholder": "Enter date", "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000001': {
                'name': 'text-widget',
                'component': 'views/components/widgets/text',
                'datatype': 'string',
                'defaultconfig': '{"width": "100%", "maxLength": null, "uneditable": false, "placeholder": "Enter text", "defaultValue": ""}'
            },
        
            '10000000-0000-0000-0000-000000000008': {
                'name': 'number-widget',
                'component': 'views/components/widgets/number',
                'datatype': 'number',
                'defaultconfig': '{"max": "", "min": "", "step": "", "width": "100%", "format": "", "prefix": "", "suffix": "", "precision": "", "uneditable": false, "placeholder": "Enter number", "defaultValue": ""}'
            },
        
            '31f3728c-7613-11e7-a139-784f435179ea': {
                'name': 'resource-instance-select-widget',
                'component': 'views/components/widgets/resource-instance-select',
                'datatype': 'resource-instance',
                'defaultconfig': '{"placeholder": "", "defaultResourceInstance": []}'
            },
        
            'ff3c400a-76ec-11e7-a793-784f435179ea': {
                'name': 'resource-instance-multiselect-widget',
                'component': 'views/components/widgets/resource-instance-multiselect',
                'datatype': 'resource-instance-list',
                'defaultconfig': '{"placeholder": "", "defaultResourceInstance": []}'
            },
        
            '10000000-0000-0000-0000-000000000003': {
                'name': 'switch-widget',
                'component': 'views/components/widgets/switch',
                'datatype': 'boolean',
                'defaultconfig': '{"subtitle": "Click to switch", "defaultValue": null}'
            },
        
            '10000000-0000-0000-0000-000000000006': {
                'name': 'radio-boolean-widget',
                'component': 'views/components/widgets/radio-boolean',
                'datatype': 'boolean',
                'defaultconfig': '{"defaultValue": null}'
            },
        
            'adfd15ce-dbab-11e7-86d1-0fcf08612b27': {
                'name': 'edtf-widget',
                'component': 'views/components/widgets/edtf',
                'datatype': 'edtf',
                'defaultconfig': '{"placeholder": "", "defaultValue": ""}'
            },
        
            'f5d6b190-bbf0-4dc9-b991-1debab8cb4a9': {
                'name': 'node-value-select',
                'component': 'views/components/widgets/node-value-select',
                'datatype': 'node-value',
                'defaultconfig': '{"placeholder": "", "displayOnlySelectedNode": false}'
            },
        
            'ca0c43ff-af73-4349-bafd-53ff9f22eebd': {
                'name': 'urldatatype',
                'component': 'views/components/widgets/urldatatype',
                'datatype': 'url',
                'defaultconfig': '{"link_color": "#0055a0", "url_placeholder": "Enter URL... ", "url_label_placeholder": "Enter URL Label... "}'
            },
        
            '25f8f8f2-e86a-43d1-a91b-bded29d7b47a': {
                'name': 'sample-widget',
                'component': 'views/components/widgets/sample-widget',
                'datatype': 'sample-datatype',
                'defaultconfig': '{"x_placeholder": "Longitude", "y_placeholder": "Latitude"}'
            },
        
            'aae743b8-4c48-11ea-988b-2bc775672c81': {
                'name': 'iiif-widget',
                'component': 'views/components/widgets/iiif',
                'datatype': 'annotation',
                'defaultconfig': '{"multiFeature": false, "defaultManifest": ""}'
            },
        };
    });

    define('report-templates', ['reports/default','reports/image','reports/map','reports/tabbed','views/components/reports/visual-work','views/components/reports/physical-thing','views/components/reports/provenance-activity','views/components/reports/digital-resource','views/components/reports/collection-set','views/components/reports/place','views/components/reports/sampling-activity','views/components/reports/observation','views/components/reports/textual-work','views/components/reports/modification','views/components/reports/person','views/components/reports/period','views/components/reports/thematic','views/components/reports/instrument','views/components/reports/project','views/components/reports/group',], function () {
        return {
            '50000000-0000-0000-0000-000000000001': {
                'componentname': 'default-report',
                'component': 'reports/default',
                'defaultconfig': '{}',
                'name': 'No Header Template',
                'preload_resource_data': 'True'
            },
        
            '50000000-0000-0000-0000-000000000003': {
                'componentname': 'image-report',
                'component': 'reports/image',
                'defaultconfig': '{"nodes": []}',
                'name': 'Image Header Template',
                'preload_resource_data': 'True'
            },
        
            '50000000-0000-0000-0000-000000000002': {
                'componentname': 'map-report',
                'component': 'reports/map',
                'defaultconfig': '{"zoom": 10, "pitch": 0.0, "basemap": "streets", "bearing": 0.0, "centerX": -122.3979693, "centerY": 37.79, "maxZoom": 20, "minZoom": 0, "featureColor": "#FF0000", "geometryTypes": [{"id": "Point", "text": "Point"}, {"id": "Line", "text": "Line"}, {"id": "Polygon", "text": "Polygon"}], "overlayConfigs": [], "overlayOpacity": 0.0, "geocodeProvider": "10000000-0000-0000-0000-010000000000", "geocoderVisible": true, "featureLineWidth": 1, "featurePointSize": 3, "mapControlsHidden": false, "geocodePlaceholder": "Search", "featureEditingDisabled": true}',
                'name': 'Map Header Template',
                'preload_resource_data': 'True'
            },
        
            '50000000-0000-0000-0000-000000000004': {
                'componentname': 'tabbed-report',
                'component': 'reports/tabbed',
                'defaultconfig': '{"tabs": [{"icon": "fa-map-marker", "name": "New Tab", "nodegroup_ids": []}], "activeTabIndex": 0}',
                'name': 'Tabbed Template',
                'preload_resource_data': 'True'
            },
        
            'c4167d32-33c4-4055-b064-ea9296c1c13a': {
                'componentname': 'visual-work-report',
                'component': 'views/components/reports/visual-work',
                'defaultconfig': '{"tabs": [{"icon": "fa fa-info", "name": "Identity", "nodegroup_ids": []}, {"icon": "fa fa-chain", "name": "Links", "nodegroup_ids": []}], "activeTabIndex": 1}',
                'name': 'Visual Work Template',
                'preload_resource_data': 'True'
            },
        
            'b3056c21-33c4-4055-b064-ea9296c1c13a': {
                'componentname': 'physical-thing-report',
                'component': 'views/components/reports/physical-thing',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Physical Thing Template',
                'preload_resource_data': 'False'
            },
        
            '1a51566c-4ba0-4633-b717-18f629350c9c': {
                'componentname': 'provenance-activity-report',
                'component': 'views/components/reports/provenance-activity',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Provenance Activity Template',
                'preload_resource_data': 'False'
            },
        
            'e6390e54-31c4-4055-b064-ea9296c1c13a': {
                'componentname': 'digital-resource-report',
                'component': 'views/components/reports/digital-resource',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Digital Resource Template',
                'preload_resource_data': 'False'
            },
        
            'b5380d34-15ef-4a38-95c0-df228068916d': {
                'componentname': 'collection-set-report',
                'component': 'views/components/reports/collection-set',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Collection or Set Template',
                'preload_resource_data': 'False'
            },
        
            '34b7109d-2c0a-47fa-a307-4e361e142bfe': {
                'componentname': 'place-report',
                'component': 'views/components/reports/place',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Place Template',
                'preload_resource_data': 'False'
            },
        
            '4c864659-fc0d-45ec-a4da-c8fb8a7ec24e': {
                'componentname': 'sampling-activity-report',
                'component': 'views/components/reports/sampling-activity',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Sampling Activity Template',
                'preload_resource_data': 'False'
            },
        
            'e581f911-185b-4456-873d-f83b46fd89ec': {
                'componentname': 'observation-report',
                'component': 'views/components/reports/observation',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Observation Template',
                'preload_resource_data': 'False'
            },
        
            '590a02ad-7d47-4b29-90a3-2e29aada677d': {
                'componentname': 'textual-work-report',
                'component': 'views/components/reports/textual-work',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Textual Work Template',
                'preload_resource_data': 'False'
            },
        
            'f02f4b69-08d9-49fa-a4d1-94ef8178fbce': {
                'componentname': 'modification-report',
                'component': 'views/components/reports/modification',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Modification Template',
                'preload_resource_data': 'False'
            },
        
            '15d3ab75-1191-41f0-a766-e7e8ce7b9ca9': {
                'componentname': 'person-report',
                'component': 'views/components/reports/person',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Person Template',
                'preload_resource_data': 'False'
            },
        
            '9f6b087b-12f4-4436-8bfc-257d1665ba40': {
                'componentname': 'period-report',
                'component': 'views/components/reports/period',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Period Template',
                'preload_resource_data': 'False'
            },
        
            'c560f22a-99b9-4a1c-b805-0891bbe63ada': {
                'componentname': 'thematic-report',
                'component': 'views/components/reports/thematic',
                'defaultconfig': '{}',
                'name': 'Thematic Template',
                'preload_resource_data': 'False'
            },
        
            'c2edf720-9db0-4029-a102-48e6762ded79': {
                'componentname': 'instrument-report',
                'component': 'views/components/reports/instrument',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Instrument Template',
                'preload_resource_data': 'False'
            },
        
            '2b124304-6e42-4c0c-8161-14c010dcef71': {
                'componentname': 'project-report',
                'component': 'views/components/reports/project',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Project Template',
                'preload_resource_data': 'False'
            },
        
            '3a9fd7d1-f065-4777-b664-3fda0eb39ffe': {
                'componentname': 'group-report',
                'component': 'views/components/reports/group',
                'defaultconfig': '{"uncompacted_reporting": true}',
                'name': 'Group Template',
                'preload_resource_data': 'False'
            },
        };
    });

    define('card-components', ['views/components/cards/default','views/components/cards/grouping','views/components/cards/related-resources-map','views/components/cards/file-viewer','views/components/cards/photo-gallery-card','views/components/cards/iiif-card','views/components/cards/map','views/components/cards/physical-thing-iiif-card',], function () {
        return {
            'f05e4d3a-53c1-11e8-b0ea-784f435179ea': {
                'componentname': 'default-card',
                'component': 'views/components/cards/default',
                'defaultconfig': '{}'
            },
        
            '2f9054d8-de57-45cd-8a9c-58bbb1619030': {
                'componentname': 'grouping-card-component',
                'component': 'views/components/cards/grouping',
                'defaultconfig': '{"groupedCardIds": [], "sortedWidgetIds": []}'
            },
        
            '2d2e0ca3-089c-4f4c-96a5-fb7eb53963bd': {
                'componentname': 'related-resources-map-card',
                'component': 'views/components/cards/related-resources-map',
                'defaultconfig': '{"basemap": "streets", "minzoom": 15, "linewidth": 2, "hovercolor": "#ff0000", "fillopacity": 0.2, "pointradius": 4, "strokecolor": "#fff", "colorpalette": ["#A4DB6E", "#F0C200", "#fdb462", "#22ff33", "#D29EFF"], "defaultcolor": "#F0C200", "overviewzoom": 11, "selectSource": "", "overlayConfigs": [], "selectioncolor": "#427AFF", "strokelinewidth": 4, "selectSourceLayer": "", "strokepointradius": 6, "strokepointopacity": 1, "selectRelatedSource": "", "selectRelatedSourceLayer": ""}'
            },
        
            '47e10bbb-cf09-4357-ace5-f824ac3bfd97': {
                'componentname': 'file-viewer',
                'component': 'views/components/cards/file-viewer',
                'defaultconfig': '{}'
            },
        
            '4e40b397-d6bc-4660-a398-4a72c90dba07': {
                'componentname': 'photo-gallery-card',
                'component': 'views/components/cards/photo-gallery-card',
                'defaultconfig': '{}'
            },
        
            '2ed3f508-4e8e-11ea-b975-5b976cab10db': {
                'componentname': 'iiif-card',
                'component': 'views/components/cards/iiif-card',
                'defaultconfig': '{"defaultManifest": ""}'
            },
        
            '3c103484-22d1-4ca9-a9f3-eb3902d567ac': {
                'componentname': 'map-card',
                'component': 'views/components/cards/map',
                'defaultconfig': '{"zoom": 0, "basemap": "streets", "centerX": 0, "centerY": 0, "selectText": "", "selectSource": "", "overlayConfigs": [], "selectSourceLayer": ""}'
            },
        
            '10ae2f00-cbda-4a0d-8ca2-5af3b46b37ad': {
                'componentname': 'physical-thing-iiif-card',
                'component': 'views/components/cards/physical-thing-iiif-card',
                'defaultconfig': '{"defaultManifest": ""}'
            },
        };
    });

    define('function-templates', [], function () {
         return;
    });

    define('component-templates', ['views/components/nodegroup-selector','views/components/simple-switch'], function () {
         return;
    });

    define('geocoder-templates', ['views/components/geocoders/mapbox',], function () {
         return;
    });

    define('file-renderers', ['views/components/cards/file-renderers/imagereader','views/components/cards/file-renderers/pdfreader',], function () {
        return [
                {'name': 'imagereader',
                'title': 'Image Reader',
                'description': 'Displays most image file types',
                'component': 'views/components/cards/file-renderers/imagereader',
                'id': '5e05aa2e-5db0-4922-8938-b4d2b7919733',
                'iconclass': 'fa fa-camera',
                'text': 'Image Reader',
                'type': 'image/*',
                'ext': '',
                'exclude': 'tif,tiff,psd',
                 },
                
                {'name': 'pdfreader',
                'title': 'PDF Reader',
                'description': 'Displays pdf files',
                'component': 'views/components/cards/file-renderers/pdfreader',
                'id': '09dec059-1ee8-4fbd-85dd-c0ab0428aa94',
                'iconclass': 'fa fa-file',
                'text': 'PDF Reader',
                'type': 'application/pdf',
                'ext': 'pdf',
                'exclude': 'tif,tiff,psd',
                 },
                ];
    });

    define('datatype-config-components',
        [
        ],
        function () { return });

    define('geoms', function () {
        return ;
    });

    define('search-components', [], function () {
            return [];
    });

    define('leaflet-draw-local', [
        'leaflet',
        'leaflet-draw'
    ], function (L) {
        L.drawLocal.draw.toolbar.actions.title = 'Cancel drawing';
        L.drawLocal.draw.toolbar.actions.text = 'Cancel';

        L.drawLocal.draw.toolbar.finish.title = 'Finish drawing';
        L.drawLocal.draw.toolbar.finish.text = 'Finish';

        L.drawLocal.draw.toolbar.undo.title = 'Delete last point drawn';
        L.drawLocal.draw.toolbar.undo.text = 'Delete last point';

        L.drawLocal.draw.toolbar.buttons.polyline = 'Draw a polyline';
        L.drawLocal.draw.toolbar.buttons.polygon = 'Draw a polygon';
        L.drawLocal.draw.toolbar.buttons.rectangle = 'Draw a rectangle';
        L.drawLocal.draw.toolbar.buttons.circle = 'Draw a circle';
        L.drawLocal.draw.toolbar.buttons.marker = 'Draw a marker';

        L.drawLocal.draw.handlers.circle.tooltip.start = 'Click and drag to draw circle.';
        L.drawLocal.draw.handlers.circle.radius = 'Radius';

        L.drawLocal.draw.handlers.marker.tooltip.start = 'Click map to place marker.';

        L.drawLocal.draw.handlers.polygon.tooltip.start = 'Click to start drawing shape.';
        L.drawLocal.draw.handlers.polygon.tooltip.cont = 'Click to continue drawing shape.';
        L.drawLocal.draw.handlers.polygon.tooltip.end = 'Click first point to close this shape.';

        L.drawLocal.draw.handlers.polyline.error = '<strong>Error:</strong> shape edges cannot cross!';
        L.drawLocal.draw.handlers.polyline.tooltip.start = 'Click to start drawing line.';
        L.drawLocal.draw.handlers.polyline.tooltip.cont = 'Click to continue drawing line.';
        L.drawLocal.draw.handlers.polyline.tooltip.end = 'Click last point to finish line.';

        L.drawLocal.draw.handlers.rectangle.tooltip.start = 'Click and drag to draw rectangle.';
        L.drawLocal.draw.handlers.simpleshape.tooltip.end = 'Release mouse to finish drawing.';

        L.drawLocal.edit.toolbar.actions.save.title = 'Apply changes.';
        L.drawLocal.edit.toolbar.actions.save.text = 'Apply';

        L.drawLocal.edit.toolbar.actions.cancel.title = 'Undo edits, discards all changes.';
        L.drawLocal.edit.toolbar.actions.cancel.text = 'Undo';

        L.drawLocal.edit.toolbar.buttons.edit = 'Edit drawings.';
        L.drawLocal.edit.toolbar.buttons.editDisabled = 'No drawings to edit.';
        L.drawLocal.edit.toolbar.buttons.remove = 'Delete drawings.';
        L.drawLocal.edit.toolbar.buttons.removeDisabled = 'No drawings to delete.';

        L.drawLocal.edit.handlers.edit.tooltip.text = 'Drag handles, or marker to edit feature.';
        L.drawLocal.edit.handlers.edit.tooltip.subtext = 'Click undo to cancel changes.';

        L.drawLocal.edit.handlers.remove.tooltip.text = 'Click on a feature to remove';
    });
</script>






    <script>
        require(["nifty","views/plugin"]);
    </script>

    



</html>
